

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Nov 24 14:46:29 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=4,class=CODE,delta=1
    27                           	psect	text17,global,reloc=4,class=CODE,delta=1
    28                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.30
    35                           ; Generated 02/06/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F57Q43 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _U1TXB	set	675
    69  0000                     _U1FIFObits	set	688
    70  0000                     _U1CON1bits	set	684
    71  0000                     _U1CON1	set	684
    72  0000                     _U1CON2	set	685
    73  0000                     _U1CON0bits	set	683
    74  0000                     _U1CON0	set	683
    75  0000                     _U1BRGL	set	686
    76  0000                     _U1BRGH	set	687
    77  0000                     _U1RXPPS	set	626
    78  0000                     _RF0PPS	set	553
    79  0000                     _ADACQ	set	1006
    80  0000                     _ADPRE	set	1009
    81  0000                     _ADERR	set	989
    82  0000                     _ADPREV	set	1000
    83  0000                     _ADRES	set	1002
    84  0000                     _ADUTH	set	987
    85  0000                     _ADSTPT	set	991
    86  0000                     _IPR2bits	set	868
    87  0000                     _ADCON2bits	set	1013
    88  0000                     _ADREFbits	set	1016
    89  0000                     _ADCON0bits	set	1011
    90  0000                     _ADPCH	set	1004
    91  0000                     _ADCON3bits	set	1014
    92  0000                     _ADCON1bits	set	1012
    93  0000                     _ANSELFbits	set	1064
    94  0000                     _ANSELAbits	set	1024
    95  0000                     _ANSELDbits	set	1048
    96  0000                     _TRISFbits	set	1227
    97  0000                     _PIE2bits	set	1184
    98  0000                     _PIR2bits	set	1200
    99  0000                     _TRISAbits	set	1222
   100  0000                     _PORTDbits	set	1233
   101  0000                     _INTCON0bits	set	1238
   102  0000                     _LATDbits	set	1217
   103  0000                     _TRISDbits	set	1225
   104                           
   105                           	psect	smallconst
   106  002500                     __psmallconst:
   107                           	callstack 0
   108  002500  00                 	db	0
   109  002501                     STR_1:
   110  002501  44                 	db	68	;'D'
   111  002502  65                 	db	101	;'e'
   112  002503  62                 	db	98	;'b'
   113  002504  75                 	db	117	;'u'
   114  002505  67                 	db	103	;'g'
   115  002506  20                 	db	32
   116  002507  55                 	db	85	;'U'
   117  002508  41                 	db	65	;'A'
   118  002509  52                 	db	82	;'R'
   119  00250A  54                 	db	84	;'T'
   120  00250B  20                 	db	32
   121  00250C  69                 	db	105	;'i'
   122  00250D  73                 	db	115	;'s'
   123  00250E  20                 	db	32
   124  00250F  75                 	db	117	;'u'
   125  002510  70                 	db	112	;'p'
   126  002511  20                 	db	32
   127  002512  61                 	db	97	;'a'
   128  002513  6E                 	db	110	;'n'
   129  002514  64                 	db	100	;'d'
   130  002515  20                 	db	32
   131  002516  72                 	db	114	;'r'
   132  002517  75                 	db	117	;'u'
   133  002518  6E                 	db	110	;'n'
   134  002519  6E                 	db	110	;'n'
   135  00251A  69                 	db	105	;'i'
   136  00251B  6E                 	db	110	;'n'
   137  00251C  67                 	db	103	;'g'
   138  00251D  0D                 	db	13
   139  00251E  00                 	db	0
   140  00251F                     STR_2:
   141  00251F  41                 	db	65	;'A'
   142  002520  44                 	db	68	;'D'
   143  002521  43                 	db	67	;'C'
   144  002522  20                 	db	32
   145  002523  6F                 	db	111	;'o'
   146  002524  70                 	db	112	;'p'
   147  002525  65                 	db	101	;'e'
   148  002526  72                 	db	114	;'r'
   149  002527  61                 	db	97	;'a'
   150  002528  74                 	db	116	;'t'
   151  002529  69                 	db	105	;'i'
   152  00252A  6F                 	db	111	;'o'
   153  00252B  6E                 	db	110	;'n'
   154  00252C  0A                 	db	10
   155  00252D  0D                 	db	13
   156  00252E  00                 	db	0
   157  00252F                     STR_7:
   158  00252F  43                 	db	67	;'C'
   159  002530  56                 	db	86	;'V'
   160  002531  44                 	db	68	;'D'
   161  002532  20                 	db	32
   162  002533  6F                 	db	111	;'o'
   163  002534  70                 	db	112	;'p'
   164  002535  65                 	db	101	;'e'
   165  002536  72                 	db	114	;'r'
   166  002537  61                 	db	97	;'a'
   167  002538  74                 	db	116	;'t'
   168  002539  69                 	db	105	;'i'
   169  00253A  6F                 	db	111	;'o'
   170  00253B  6E                 	db	110	;'n'
   171  00253C  0A                 	db	10
   172  00253D  0D                 	db	13
   173  00253E  00                 	db	0
   174  00253F                     STR_3:
   175  00253F  41                 	db	65	;'A'
   176  002540  44                 	db	68	;'D'
   177  002541  52                 	db	82	;'R'
   178  002542  45                 	db	69	;'E'
   179  002543  53                 	db	83	;'S'
   180  002544  20                 	db	32
   181  002545  20                 	db	32
   182  002546  3D                 	db	61	;'='
   183  002547  20                 	db	32
   184  002548  25                 	db	37
   185  002549  64                 	db	100	;'d'
   186  00254A  0A                 	db	10
   187  00254B  0D                 	db	13
   188  00254C  00                 	db	0
   189  00254D                     STR_4:
   190  00254D  41                 	db	65	;'A'
   191  00254E  44                 	db	68	;'D'
   192  00254F  50                 	db	80	;'P'
   193  002550  52                 	db	82	;'R'
   194  002551  45                 	db	69	;'E'
   195  002552  56                 	db	86	;'V'
   196  002553  20                 	db	32
   197  002554  3D                 	db	61	;'='
   198  002555  20                 	db	32
   199  002556  25                 	db	37
   200  002557  64                 	db	100	;'d'
   201  002558  0A                 	db	10
   202  002559  0D                 	db	13
   203  00255A  00                 	db	0
   204  00255B                     STR_5:
   205  00255B  41                 	db	65	;'A'
   206  00255C  44                 	db	68	;'D'
   207  00255D  45                 	db	69	;'E'
   208  00255E  52                 	db	82	;'R'
   209  00255F  52                 	db	82	;'R'
   210  002560  20                 	db	32
   211  002561  3D                 	db	61	;'='
   212  002562  20                 	db	32
   213  002563  25                 	db	37
   214  002564  64                 	db	100	;'d'
   215  002565  0A                 	db	10
   216  002566  0D                 	db	13
   217  002567  00                 	db	0
   218  002568                     STR_8:
   219  002568  41                 	db	65	;'A'
   220  002569  44                 	db	68	;'D'
   221  00256A  52                 	db	82	;'R'
   222  00256B  45                 	db	69	;'E'
   223  00256C  53                 	db	83	;'S'
   224  00256D  20                 	db	32
   225  00256E  3D                 	db	61	;'='
   226  00256F  20                 	db	32
   227  002570  25                 	db	37
   228  002571  64                 	db	100	;'d'
   229  002572  0A                 	db	10
   230  002573  0D                 	db	13
   231  002574  00                 	db	0
   232  002575                     STR_6:
   233  002575  52                 	db	82	;'R'
   234  002576  44                 	db	68	;'D'
   235  002577  30                 	db	48	;'0'
   236  002578  20                 	db	32
   237  002579  3D                 	db	61	;'='
   238  00257A  20                 	db	32
   239  00257B  25                 	db	37
   240  00257C  64                 	db	100	;'d'
   241  00257D  0A                 	db	10
   242  00257E  0A                 	db	10
   243  00257F  0D                 	db	13
   244  002580  00                 	db	0
   245  002581  00                 	db	0	; dummy byte at the end
   246  0000                     
   247                           ; #config settings
   248                           
   249                           	psect	cinit
   250  0032C0                     __pcinit:
   251                           	callstack 0
   252  0032C0                     start_initialization:
   253                           	callstack 0
   254  0032C0                     __initialization:
   255                           	callstack 0
   256                           
   257                           ; Clear objects allocated to BANK5 (40 bytes)
   258  0032C0  EE01  F160         	lfsr	0,__pbssBANK5
   259  0032C4  0E28               	movlw	40
   260  0032C6                     clear_0:
   261  0032C6  6AEE               	clrf	postinc0,c
   262  0032C8  06E8               	decf	wreg,f,c
   263  0032CA  E1FD               	bnz	clear_0
   264                           
   265                           ;
   266                           ; Setup IVTBASE
   267                           ;
   268  0032CC  0104               	movlb	4
   269  0032CE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   270  0032D0  6F5D               	movwf	93,b
   271  0032D2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   272  0032D4  6F5E               	movwf	94,b
   273  0032D6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   274  0032D8  6F5F               	movwf	95,b
   275  0032DA                     end_of_initialization:
   276                           	callstack 0
   277  0032DA                     __end_of__initialization:
   278                           	callstack 0
   279  0032DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  0032DC  6EF8               	movwf	tblptru,c
   281  0032DE  0100               	movlb	0
   282  0032E0  EF29  F015         	goto	_main	;jump to C main() function
   283                           
   284                           	psect	bssBANK5
   285  000560                     __pbssBANK5:
   286                           	callstack 0
   287  000560                     _nout:
   288                           	callstack 0
   289  000560                     	ds	2
   290  000562                     _width:
   291                           	callstack 0
   292  000562                     	ds	2
   293  000564                     _prec:
   294                           	callstack 0
   295  000564                     	ds	2
   296  000566                     _flags:
   297                           	callstack 0
   298  000566                     	ds	2
   299  000568                     _dbuf:
   300                           	callstack 0
   301  000568                     	ds	32
   302                           
   303                           	psect	cstackBANK5
   304  000588                     __pcstackBANK5:
   305                           	callstack 0
   306  000588                     	ds	2
   307  00058A                     printf@ap:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x2
   311  00058A                     	ds	2
   312  00058C                     ??_main:
   313                           
   314                           ; 1 bytes @ 0x4
   315  00058C                     	ds	2
   316  00058E                     main@DVpre:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x6
   320  00058E                     	ds	2
   321                           
   322                           	psect	cstackCOMRAM
   323  000501                     __pcstackCOMRAM:
   324                           	callstack 0
   325  000501                     ?_strlen:
   326                           	callstack 0
   327  000501                     ?___aodiv:
   328                           	callstack 0
   329  000501                     ?___aomod:
   330                           	callstack 0
   331  000501                     putch@data:
   332                           	callstack 0
   333  000501                     strlen@s:
   334                           	callstack 0
   335  000501                     ___aodiv@dividend:
   336                           	callstack 0
   337  000501                     ___aomod@dividend:
   338                           	callstack 0
   339                           
   340                           ; 8 bytes @ 0x0
   341  000501                     	ds	1
   342  000502                     ?_fputc:
   343                           	callstack 0
   344  000502                     fputc@c:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x1
   348  000502                     	ds	1
   349  000503                     strlen@a:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x2
   353  000503                     	ds	1
   354  000504                     fputc@fp:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x3
   358  000504                     	ds	2
   359  000506                     ??_fputc:
   360                           
   361                           ; 1 bytes @ 0x5
   362  000506                     	ds	3
   363  000509                     ___aodiv@divisor:
   364                           	callstack 0
   365  000509                     ___aomod@divisor:
   366                           	callstack 0
   367                           
   368                           ; 8 bytes @ 0x8
   369  000509                     	ds	2
   370  00050B                     ?_fputs:
   371                           	callstack 0
   372  00050B                     fputs@s:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xA
   376  00050B                     	ds	2
   377  00050D                     fputs@fp:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xC
   381  00050D                     	ds	2
   382  00050F                     ??_fputs:
   383                           
   384                           ; 1 bytes @ 0xE
   385  00050F                     	ds	2
   386  000511                     ___aodiv@counter:
   387                           	callstack 0
   388  000511                     ___aomod@counter:
   389                           	callstack 0
   390  000511                     fputs@c:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x10
   394  000511                     	ds	1
   395  000512                     ___aodiv@sign:
   396                           	callstack 0
   397  000512                     ___aomod@sign:
   398                           	callstack 0
   399  000512                     fputs@i:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x11
   403  000512                     	ds	1
   404  000513                     ?_abs:
   405                           	callstack 0
   406  000513                     abs@a:
   407                           	callstack 0
   408  000513                     ___aodiv@quotient:
   409                           	callstack 0
   410                           
   411                           ; 8 bytes @ 0x12
   412  000513                     	ds	1
   413  000514                     ?_pad:
   414                           	callstack 0
   415  000514                     pad@fp:
   416                           	callstack 0
   417  000514                     puts@s:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x13
   421  000514                     	ds	1
   422  000515                     ??_abs:
   423                           
   424                           ; 1 bytes @ 0x14
   425  000515                     	ds	1
   426  000516                     pad@buf:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x15
   430  000516                     	ds	2
   431  000518                     _puts$1457:
   432                           	callstack 0
   433  000518                     pad@p:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x17
   437  000518                     	ds	2
   438  00051A                     ??_pad:
   439                           
   440                           ; 1 bytes @ 0x19
   441  00051A                     	ds	1
   442  00051B                     pad@i:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x1A
   446  00051B                     	ds	2
   447  00051D                     pad@w:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x1C
   451  00051D                     	ds	2
   452  00051F                     ?_dtoa:
   453                           	callstack 0
   454  00051F                     dtoa@fp:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x1E
   458  00051F                     	ds	2
   459  000521                     dtoa@d:
   460                           	callstack 0
   461                           
   462                           ; 8 bytes @ 0x20
   463  000521                     	ds	8
   464  000529                     ??_dtoa:
   465                           
   466                           ; 1 bytes @ 0x28
   467  000529                     	ds	8
   468  000531                     _dtoa$1402:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x30
   472  000531                     	ds	2
   473  000533                     dtoa@p:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x32
   477  000533                     	ds	2
   478  000535                     dtoa@w:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x34
   482  000535                     	ds	2
   483  000537                     dtoa@s:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x36
   487  000537                     	ds	2
   488  000539                     dtoa@n:
   489                           	callstack 0
   490                           
   491                           ; 8 bytes @ 0x38
   492  000539                     	ds	8
   493  000541                     dtoa@i:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x40
   497  000541                     	ds	2
   498  000543                     ?_vfpfcnvrt:
   499                           	callstack 0
   500  000543                     vfpfcnvrt@fp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x42
   504  000543                     	ds	2
   505  000545                     vfpfcnvrt@fmt:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x44
   509  000545                     	ds	2
   510  000547                     vfpfcnvrt@ap:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x46
   514  000547                     	ds	2
   515  000549                     ??_vfpfcnvrt:
   516                           
   517                           ; 1 bytes @ 0x48
   518  000549                     	ds	2
   519  00054B                     vfpfcnvrt@ll:
   520                           	callstack 0
   521                           
   522                           ; 8 bytes @ 0x4A
   523  00054B                     	ds	8
   524  000553                     ?_vfprintf:
   525                           	callstack 0
   526  000553                     vfprintf@fp:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x52
   530  000553                     	ds	2
   531  000555                     vfprintf@fmt:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x54
   535  000555                     	ds	2
   536  000557                     vfprintf@ap:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x56
   540  000557                     	ds	2
   541  000559                     vfprintf@cfmt:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x58
   545  000559                     	ds	2
   546  00055B                     ?_printf:
   547                           	callstack 0
   548  00055B                     printf@fmt:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x5A
   552  00055B                     	ds	4
   553  00055F                     
   554                           ; 1 bytes @ 0x5E
   555 ;;
   556 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   557 ;;
   558 ;; *************** function _main *****************
   559 ;; Defined at:
   560 ;;		line 122 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  DVpre           2    6[BANK5 ] short 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   577 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   578 ;;Total ram usage:        4 bytes
   579 ;; Hardware stack levels required when called:    9
   580 ;; This function calls:
   581 ;;		_ADC_INIT
   582 ;;		_DEBUG_UART_INIT
   583 ;;		_printf
   584 ;;		_puts
   585 ;; This function is called by:
   586 ;;		Startup code after reset
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text0
   591  002A52                     __ptext0:
   592                           	callstack 0
   593  002A52                     _main:
   594                           	callstack 119
   595  002A52                     
   596                           ;main.c: 125:     int16_t DVpre;;main.c: 129:     ANSELDbits.ANSELD0 = 0;
   597  002A52  0104               	movlb	4	; () banked
   598  002A54  9118               	bcf	24,0,b	;volatile
   599                           
   600                           ;main.c: 130:     TRISDbits.TRISD0 = 0;
   601  002A56  90C9               	bcf	201,0,c	;volatile
   602                           
   603                           ;main.c: 131:     LATDbits.LATD0 = 0;
   604  002A58  90C1               	bcf	193,0,c	;volatile
   605  002A5A                     
   606                           ; BSR set to: 4
   607                           ;main.c: 134:     DEBUG_UART_INIT();
   608  002A5A  EC31  F019         	call	_DEBUG_UART_INIT	;wreg free
   609  002A5E                     
   610                           ;main.c: 136:     puts("Debug UART is up and running\r");
   611  002A5E  0E01               	movlw	low STR_1
   612  002A60  6E14               	movwf	puts@s^(0+1280),c
   613  002A62  0E25               	movlw	high STR_1
   614  002A64  6E15               	movwf	(puts@s+1)^(0+1280),c
   615  002A66  ECAF  F018         	call	_puts	;wreg free
   616  002A6A                     
   617                           ;main.c: 139:     ADC_INIT();
   618  002A6A  ECF6  F018         	call	_ADC_INIT	;wreg free
   619  002A6E                     
   620                           ;main.c: 142:     INTCON0bits.GIEH = 1;
   621  002A6E  8ED6               	bsf	214,7,c	;volatile
   622  002A70                     l1585:
   623                           
   624                           ;main.c: 145:     {;main.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)))
      +                          ;
   625  002A70  0E05               	movlw	5
   626  002A72  0105               	movlb	5	; () banked
   627  002A74  6F8D               	movwf	(??_main+1)& (0+255),b
   628  002A76  0E0F               	movlw	15
   629  002A78  6F8C               	movwf	??_main& (0+255),b
   630  002A7A  0EF1               	movlw	241
   631  002A7C                     u1097:
   632  002A7C  2EE8               	decfsz	wreg,f,c
   633  002A7E  D7FE               	bra	u1097
   634  002A80  2F8C               	decfsz	??_main& (0+255),f,b
   635  002A82  D7FC               	bra	u1097
   636  002A84  2F8D               	decfsz	(??_main+1)& (0+255),f,b
   637  002A86  D7FA               	bra	u1097
   638  002A88                     
   639                           ;main.c: 152:         ADCON1bits.DSEN = 0;
   640  002A88  0103               	movlb	3	; () banked
   641  002A8A  91F4               	bcf	244,0,b	;volatile
   642  002A8C                     
   643                           ; BSR set to: 3
   644                           ;main.c: 156:         ADCON3bits.CALC = 1;
   645  002A8C  51F6               	movf	246,w,b	;volatile
   646  002A8E  0B8F               	andlw	-113
   647  002A90  0910               	iorlw	16
   648  002A92  6FF6               	movwf	246,b	;volatile
   649  002A94                     
   650                           ; BSR set to: 3
   651                           ;main.c: 159:         ADSTPT = 0;
   652  002A94  0E00               	movlw	0
   653  002A96  6FE0               	movwf	224,b	;volatile
   654  002A98  0E00               	movlw	0
   655  002A9A  6FDF               	movwf	223,b	;volatile
   656  002A9C                     
   657                           ; BSR set to: 3
   658                           ;main.c: 162:         ADUTH = 2047;
   659  002A9C  0E07               	movlw	7
   660  002A9E  6FDC               	movwf	220,b	;volatile
   661  002AA0  69DB               	setf	219,b	;volatile
   662  002AA2                     
   663                           ; BSR set to: 3
   664                           ;main.c: 166:         ADCON3bits.TMD = 6;
   665  002AA2  51F6               	movf	246,w,b	;volatile
   666  002AA4  0BF8               	andlw	-8
   667  002AA6  0906               	iorlw	6
   668  002AA8  6FF6               	movwf	246,b	;volatile
   669  002AAA                     
   670                           ; BSR set to: 3
   671                           ;main.c: 170:         ADPCH = 0;
   672  002AAA  0E00               	movlw	0
   673  002AAC  6FEC               	movwf	236,b	;volatile
   674  002AAE                     
   675                           ; BSR set to: 3
   676                           ;main.c: 173:         ADCON0bits.GO = 1;
   677  002AAE  81F3               	bsf	243,0,b	;volatile
   678  002AB0                     l44:
   679                           
   680                           ; BSR set to: 3
   681  002AB0  B1F3               	btfsc	243,0,b	;volatile
   682  002AB2  EF5D  F015         	goto	u1031
   683  002AB6  EF5F  F015         	goto	u1030
   684  002ABA                     u1031:
   685  002ABA  EF58  F015         	goto	l44
   686  002ABE                     u1030:
   687  002ABE                     
   688                           ; BSR set to: 3
   689                           ;main.c: 180:         printf("ADC operation\n\r");
   690  002ABE  0E1F               	movlw	low STR_2
   691  002AC0  6E5B               	movwf	printf@fmt^(0+1280),c
   692  002AC2  0E25               	movlw	high STR_2
   693  002AC4  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   694  002AC6  EC4C  F019         	call	_printf	;wreg free
   695                           
   696                           ;main.c: 181:         printf("ADRES  = %d\n\r", ADRES);
   697  002ACA  0E3F               	movlw	low STR_3
   698  002ACC  6E5B               	movwf	printf@fmt^(0+1280),c
   699  002ACE  0E25               	movlw	high STR_3
   700  002AD0  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   701  002AD2  0060 FFA8  F55D    	movff	1002,?_printf+2	;volatile
   702  002AD8  0060 FFAC  F55E    	movff	1003,?_printf+3	;volatile
   703  002ADE  EC4C  F019         	call	_printf	;wreg free
   704                           
   705                           ;main.c: 182:         printf("ADPREV = %d\n\r", ADPREV);
   706  002AE2  0E4D               	movlw	low STR_4
   707  002AE4  6E5B               	movwf	printf@fmt^(0+1280),c
   708  002AE6  0E25               	movlw	high STR_4
   709  002AE8  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   710  002AEA  0060 FFA0  F55D    	movff	1000,?_printf+2	;volatile
   711  002AF0  0060 FFA4  F55E    	movff	1001,?_printf+3	;volatile
   712  002AF6  EC4C  F019         	call	_printf	;wreg free
   713                           
   714                           ;main.c: 183:         printf("ADERR = %d\n\r", ADERR);
   715  002AFA  0E5B               	movlw	low STR_5
   716  002AFC  6E5B               	movwf	printf@fmt^(0+1280),c
   717  002AFE  0E25               	movlw	high STR_5
   718  002B00  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   719  002B02  0060 FF74  F55D    	movff	989,?_printf+2	;volatile
   720  002B08  0060 FF78  F55E    	movff	990,?_printf+3	;volatile
   721  002B0E  EC4C  F019         	call	_printf	;wreg free
   722                           
   723                           ;main.c: 185:         printf("RD0 = %d\n\n\r", PORTDbits.RD0);
   724  002B12  0E75               	movlw	low STR_6
   725  002B14  6E5B               	movwf	printf@fmt^(0+1280),c
   726  002B16  0E25               	movlw	high STR_6
   727  002B18  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   728  002B1A  B0D1               	btfsc	209,0,c	;volatile
   729  002B1C  EF92  F015         	goto	u1041
   730  002B20  EF97  F015         	goto	u1040
   731  002B24                     u1041:
   732  002B24  0105               	movlb	5	; () banked
   733  002B26  6B8C               	clrf	??_main& (0+255),b
   734  002B28  2B8C               	incf	??_main& (0+255),f,b
   735  002B2A  EF99  F015         	goto	u1048
   736  002B2E                     u1040:
   737  002B2E  0105               	movlb	5	; () banked
   738  002B30  6B8C               	clrf	??_main& (0+255),b
   739  002B32                     u1048:
   740  002B32  518C               	movf	??_main& (0+255),w,b
   741  002B34  6E5D               	movwf	(?_printf+2)^(0+1280),c
   742  002B36  6A5E               	clrf	(?_printf+3)^(0+1280),c
   743  002B38  EC4C  F019         	call	_printf	;wreg free
   744  002B3C                     
   745                           ;main.c: 195:         ADCON1bits.DSEN = 1;
   746  002B3C  0103               	movlb	3	; () banked
   747  002B3E  81F4               	bsf	244,0,b	;volatile
   748  002B40                     
   749                           ; BSR set to: 3
   750                           ;main.c: 199:         ADCON3bits.CALC = 0;
   751  002B40  0E8F               	movlw	-113
   752  002B42  17F6               	andwf	246,f,b	;volatile
   753  002B44                     
   754                           ; BSR set to: 3
   755                           ;main.c: 203:         ADCON3bits.TMD = 0;
   756  002B44  0EF8               	movlw	-8
   757  002B46  17F6               	andwf	246,f,b	;volatile
   758  002B48                     
   759                           ; BSR set to: 3
   760                           ;main.c: 207:         ADPCH = 1;
   761  002B48  0E01               	movlw	1
   762  002B4A  6FEC               	movwf	236,b	;volatile
   763  002B4C                     
   764                           ; BSR set to: 3
   765                           ;main.c: 210:         ADCON0bits.GO = 1;
   766  002B4C  81F3               	bsf	243,0,b	;volatile
   767  002B4E                     l47:
   768                           
   769                           ; BSR set to: 3
   770  002B4E  B1F3               	btfsc	243,0,b	;volatile
   771  002B50  EFAC  F015         	goto	u1051
   772  002B54  EFAE  F015         	goto	u1050
   773  002B58                     u1051:
   774  002B58  EFA7  F015         	goto	l47
   775  002B5C                     u1050:
   776  002B5C                     
   777                           ; BSR set to: 3
   778                           ;main.c: 216:         ADCON0bits.GO = 1;
   779  002B5C  81F3               	bsf	243,0,b	;volatile
   780  002B5E                     l50:
   781                           
   782                           ; BSR set to: 3
   783  002B5E  B1F3               	btfsc	243,0,b	;volatile
   784  002B60  EFB4  F015         	goto	u1061
   785  002B64  EFB6  F015         	goto	u1060
   786  002B68                     u1061:
   787  002B68  EFAF  F015         	goto	l50
   788  002B6C                     u1060:
   789  002B6C                     
   790                           ; BSR set to: 3
   791                           ;main.c: 222:         _delay((unsigned long)((5)*(64000000/4000000.0)));
   792  002B6C  0E1A               	movlw	26
   793  002B6E                     u1107:
   794  002B6E  2EE8               	decfsz	wreg,f,c
   795  002B70  D7FE               	bra	u1107
   796  002B72  D000               	nop2	
   797  002B74                     
   798                           ;main.c: 225:         if (((int16_t)ADERR - DVpre) > 20) LATDbits.LATD0 = 0;
   799  002B74  0105               	movlb	5	; () banked
   800  002B76  518E               	movf	main@DVpre& (0+255),w,b
   801  002B78  0103               	movlb	3	; () banked
   802  002B7A  5DDD               	subwf	221,w,b	;volatile
   803  002B7C  0105               	movlb	5	; () banked
   804  002B7E  6F8C               	movwf	??_main& (0+255),b
   805  002B80  518F               	movf	(main@DVpre+1)& (0+255),w,b
   806  002B82  0103               	movlb	3	; () banked
   807  002B84  59DE               	subwfb	222,w,b	;volatile
   808  002B86  0105               	movlb	5	; () banked
   809  002B88  6F8D               	movwf	(??_main+1)& (0+255),b
   810  002B8A  BF8D               	btfsc	(??_main+1)& (0+255),7,b
   811  002B8C  EFD1  F015         	goto	u1071
   812  002B90  518D               	movf	(??_main+1)& (0+255),w,b
   813  002B92  E109               	bnz	u1070
   814  002B94  0E15               	movlw	21
   815  002B96  5D8C               	subwf	??_main& (0+255),w,b
   816  002B98  A0D8               	btfss	status,0,c
   817  002B9A  EFD1  F015         	goto	u1071
   818  002B9E  EFD3  F015         	goto	u1070
   819  002BA2                     u1071:
   820  002BA2  EFD4  F015         	goto	l53
   821  002BA6                     u1070:
   822  002BA6                     
   823                           ; BSR set to: 5
   824  002BA6  90C1               	bcf	193,0,c	;volatile
   825  002BA8                     l53:
   826                           
   827                           ; BSR set to: 5
   828                           ;main.c: 226:         DVpre = (int16_t)ADERR;
   829  002BA8  0060 FF74  F58E    	movff	989,main@DVpre	;volatile
   830  002BAE  0060 FF78  F58F    	movff	990,main@DVpre+1	;volatile
   831  002BB4                     
   832                           ; BSR set to: 5
   833                           ;main.c: 229:         printf("CVD operation\n\r");
   834  002BB4  0E2F               	movlw	low STR_7
   835  002BB6  6E5B               	movwf	printf@fmt^(0+1280),c
   836  002BB8  0E25               	movlw	high STR_7
   837  002BBA  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   838  002BBC  EC4C  F019         	call	_printf	;wreg free
   839                           
   840                           ;main.c: 230:         printf("ADRES = %d\n\r", ADRES);
   841  002BC0  0E68               	movlw	low STR_8
   842  002BC2  6E5B               	movwf	printf@fmt^(0+1280),c
   843  002BC4  0E25               	movlw	high STR_8
   844  002BC6  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   845  002BC8  0060 FFA8  F55D    	movff	1002,?_printf+2	;volatile
   846  002BCE  0060 FFAC  F55E    	movff	1003,?_printf+3	;volatile
   847  002BD4  EC4C  F019         	call	_printf	;wreg free
   848                           
   849                           ;main.c: 231:         printf("ADPREV = %d\n\r", ADPREV);
   850  002BD8  0E4D               	movlw	low STR_4
   851  002BDA  6E5B               	movwf	printf@fmt^(0+1280),c
   852  002BDC  0E25               	movlw	high STR_4
   853  002BDE  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   854  002BE0  0060 FFA0  F55D    	movff	1000,?_printf+2	;volatile
   855  002BE6  0060 FFA4  F55E    	movff	1001,?_printf+3	;volatile
   856  002BEC  EC4C  F019         	call	_printf	;wreg free
   857                           
   858                           ;main.c: 232:         printf("ADERR = %d\n\r", ADERR);
   859  002BF0  0E5B               	movlw	low STR_5
   860  002BF2  6E5B               	movwf	printf@fmt^(0+1280),c
   861  002BF4  0E25               	movlw	high STR_5
   862  002BF6  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   863  002BF8  0060 FF74  F55D    	movff	989,?_printf+2	;volatile
   864  002BFE  0060 FF78  F55E    	movff	990,?_printf+3	;volatile
   865  002C04  EC4C  F019         	call	_printf	;wreg free
   866                           
   867                           ;main.c: 234:         printf("RD0 = %d\n\n\r", PORTDbits.RD0);
   868  002C08  0E75               	movlw	low STR_6
   869  002C0A  6E5B               	movwf	printf@fmt^(0+1280),c
   870  002C0C  0E25               	movlw	high STR_6
   871  002C0E  6E5C               	movwf	(printf@fmt+1)^(0+1280),c
   872  002C10  B0D1               	btfsc	209,0,c	;volatile
   873  002C12  EF0D  F016         	goto	u1081
   874  002C16  EF12  F016         	goto	u1080
   875  002C1A                     u1081:
   876  002C1A  0105               	movlb	5	; () banked
   877  002C1C  6B8C               	clrf	??_main& (0+255),b
   878  002C1E  2B8C               	incf	??_main& (0+255),f,b
   879  002C20  EF14  F016         	goto	u1088
   880  002C24                     u1080:
   881  002C24  0105               	movlb	5	; () banked
   882  002C26  6B8C               	clrf	??_main& (0+255),b
   883  002C28                     u1088:
   884  002C28  518C               	movf	??_main& (0+255),w,b
   885  002C2A  6E5D               	movwf	(?_printf+2)^(0+1280),c
   886  002C2C  6A5E               	clrf	(?_printf+3)^(0+1280),c
   887  002C2E  EC4C  F019         	call	_printf	;wreg free
   888  002C32  EF38  F015         	goto	l1585
   889  002C36  EF81  F000         	goto	start
   890  002C3A                     __end_of_main:
   891                           	callstack 0
   892                           
   893 ;; *************** function _puts *****************
   894 ;; Defined at:
   895 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\puts.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  s               2   19[COMRAM] PTR const unsigned char 
   898 ;;		 -> STR_1(30), 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  r               2    0        int 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  2   19[COMRAM] int 
   903 ;; Registers used:
   904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   911 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   913 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   914 ;;Total ram usage:        5 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    4
   917 ;; This function calls:
   918 ;;		_fputc
   919 ;;		_fputs
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text1
   926  00315E                     __ptext1:
   927                           	callstack 0
   928  00315E                     _puts:
   929                           	callstack 123
   930  00315E  0E01               	movlw	1
   931  003160  6E18               	movwf	_puts$1457^(0+1280),c
   932  003162  C514  F50B         	movff	puts@s,fputs@s
   933  003166  C515  F50C         	movff	puts@s+1,fputs@s+1
   934  00316A  0E00               	movlw	0
   935  00316C  6E0D               	movwf	fputs@fp^(0+1280),c
   936  00316E  0E00               	movlw	0
   937  003170  6E0E               	movwf	(fputs@fp+1)^(0+1280),c
   938  003172  EC44  F018         	call	_fputs	;wreg free
   939  003176  BE0C               	btfsc	(?_fputs+1)^(0+1280),7,c
   940  003178  EFC0  F018         	goto	u1011
   941  00317C  EFC2  F018         	goto	u1010
   942  003180                     u1011:
   943  003180  EFD5  F018         	goto	l916
   944  003184                     u1010:
   945  003184  0E00               	movlw	0
   946  003186  6E03               	movwf	(fputc@c+1)^(0+1280),c
   947  003188  0E0A               	movlw	10
   948  00318A  6E02               	movwf	fputc@c^(0+1280),c
   949  00318C  0E00               	movlw	0
   950  00318E  6E04               	movwf	fputc@fp^(0+1280),c
   951  003190  0E00               	movlw	0
   952  003192  6E05               	movwf	(fputc@fp+1)^(0+1280),c
   953  003194  ECF6  F017         	call	_fputc	;wreg free
   954  003198  BE03               	btfsc	(?_fputc+1)^(0+1280),7,c
   955  00319A  EFD1  F018         	goto	u1021
   956  00319E  EFD3  F018         	goto	u1020
   957  0031A2                     u1021:
   958  0031A2  EFD5  F018         	goto	l916
   959  0031A6                     u1020:
   960  0031A6  0E00               	movlw	0
   961  0031A8  6E18               	movwf	_puts$1457^(0+1280),c
   962  0031AA                     l916:
   963  0031AA  0012               	return		;funcret
   964  0031AC                     __end_of_puts:
   965                           	callstack 0
   966                           
   967 ;; *************** function _printf *****************
   968 ;; Defined at:
   969 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
   972 ;;		 -> STR_11(12), STR_10(13), STR_9(14), STR_8(13), 
   973 ;;		 -> STR_7(16), STR_6(12), STR_5(13), STR_4(14), 
   974 ;;		 -> STR_3(14), STR_2(16), 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  ap              2    2[BANK5 ] PTR void [1]
   977 ;;		 -> ?_printf(2), 
   978 ;;  ret             2    0        int 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  2   90[COMRAM] int 
   981 ;; Registers used:
   982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   989 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   991 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   992 ;;Total ram usage:        8 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    8
   995 ;; This function calls:
   996 ;;		_vfprintf
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text2
  1003  003298                     __ptext2:
  1004                           	callstack 0
  1005  003298                     _printf:
  1006                           	callstack 119
  1007  003298  0E5D               	movlw	low (?_printf+2)
  1008  00329A  0105               	movlb	5	; () banked
  1009  00329C  6F8A               	movwf	printf@ap& (0+255),b
  1010  00329E  0E05               	movlw	high (?_printf+2)
  1011  0032A0  6F8B               	movwf	(printf@ap+1)& (0+255),b
  1012  0032A2                     
  1013                           ; BSR set to: 5
  1014  0032A2  0E00               	movlw	0
  1015  0032A4  6E53               	movwf	vfprintf@fp^(0+1280),c
  1016  0032A6  0E00               	movlw	0
  1017  0032A8  6E54               	movwf	(vfprintf@fp+1)^(0+1280),c
  1018  0032AA  C55B  F555         	movff	printf@fmt,vfprintf@fmt
  1019  0032AE  C55C  F556         	movff	printf@fmt+1,vfprintf@fmt+1
  1020  0032B2  0E8A               	movlw	low printf@ap
  1021  0032B4  6E57               	movwf	vfprintf@ap^(0+1280),c
  1022  0032B6  0E05               	movlw	high printf@ap
  1023  0032B8  6E58               	movwf	(vfprintf@ap+1)^(0+1280),c
  1024  0032BA  EC7C  F018         	call	_vfprintf	;wreg free
  1025  0032BE  0012               	return		;funcret
  1026  0032C0                     __end_of_printf:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _vfprintf *****************
  1030 ;; Defined at:
  1031 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1034 ;;		 -> NULL(0), 
  1035 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1036 ;;		 -> STR_11(12), STR_10(13), STR_9(14), STR_8(13), 
  1037 ;;		 -> STR_7(16), STR_6(12), STR_5(13), STR_4(14), 
  1038 ;;		 -> STR_3(14), STR_2(16), 
  1039 ;;  ap              2   86[COMRAM] PTR PTR void 
  1040 ;;		 -> printf@ap(2), 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1043 ;;		 -> STR_11(12), STR_10(13), STR_9(14), STR_8(13), 
  1044 ;;		 -> STR_7(16), STR_6(12), STR_5(13), STR_4(14), 
  1045 ;;		 -> STR_3(14), STR_2(16), 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  2   82[COMRAM] int 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1055 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1058 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1059 ;;Total ram usage:        8 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    7
  1062 ;; This function calls:
  1063 ;;		_vfpfcnvrt
  1064 ;; This function is called by:
  1065 ;;		_printf
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text3
  1070  0030F8                     __ptext3:
  1071                           	callstack 0
  1072  0030F8                     _vfprintf:
  1073                           	callstack 119
  1074  0030F8                     
  1075                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1076  0030F8  C555  F559         	movff	vfprintf@fmt,vfprintf@cfmt
  1077  0030FC  C556  F55A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1078  003100                     
  1079                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1080  003100  0E00               	movlw	0
  1081  003102  0105               	movlb	5	; () banked
  1082  003104  6F61               	movwf	(_nout+1)& (0+255),b
  1083  003106  0E00               	movlw	0
  1084  003108  6F60               	movwf	_nout& (0+255),b
  1085                           
  1086                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1087  00310A  EF9A  F018         	goto	l1529
  1088  00310E                     l1527:
  1089                           
  1090                           ; BSR set to: 5
  1091                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1092  00310E  C553  F543         	movff	vfprintf@fp,vfpfcnvrt@fp
  1093  003112  C554  F544         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1094  003116  0E59               	movlw	low vfprintf@cfmt
  1095  003118  6E45               	movwf	vfpfcnvrt@fmt^(0+1280),c
  1096  00311A  0E05               	movlw	high vfprintf@cfmt
  1097  00311C  6E46               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
  1098  00311E  C557  F547         	movff	vfprintf@ap,vfpfcnvrt@ap
  1099  003122  C558  F548         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1100  003126  EC33  F014         	call	_vfpfcnvrt	;wreg free
  1101  00312A  5043               	movf	?_vfpfcnvrt^(0+1280),w,c
  1102  00312C  0105               	movlb	5	; () banked
  1103  00312E  2760               	addwf	_nout& (0+255),f,b
  1104  003130  5044               	movf	(?_vfpfcnvrt+1)^(0+1280),w,c
  1105  003132  2361               	addwfc	(_nout+1)& (0+255),f,b
  1106  003134                     l1529:
  1107                           
  1108                           ; BSR set to: 5
  1109                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1110  003134  0061  F564  F4F6   	movff	vfprintf@cfmt,tblptrl
  1111  00313A  0061  F568  F4F7   	movff	vfprintf@cfmt+1,tblptrh
  1112  003140                     	if	0	;tblptru may be non-zero
  1113  003140                     	endif
  1114  003140                     	if	0	;tblptru may be non-zero
  1115  003140                     	endif
  1116  003140  0008               	tblrd		*
  1117  003142  50F5               	movf	tablat,w,c
  1118  003144  0900               	iorlw	0
  1119  003146  A4D8               	btfss	status,2,c
  1120  003148  EFA8  F018         	goto	u1001
  1121  00314C  EFAA  F018         	goto	u1000
  1122  003150                     u1001:
  1123  003150  EF87  F018         	goto	l1527
  1124  003154                     u1000:
  1125  003154                     
  1126                           ; BSR set to: 5
  1127                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1128  003154  C560  F553         	movff	_nout,?_vfprintf
  1129  003158  C561  F554         	movff	_nout+1,?_vfprintf+1
  1130  00315C                     
  1131                           ; BSR set to: 5
  1132  00315C  0012               	return		;funcret
  1133  00315E                     __end_of_vfprintf:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _vfpfcnvrt *****************
  1137 ;; Defined at:
  1138 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1141 ;;		 -> NULL(0), 
  1142 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1143 ;;		 -> vfprintf@cfmt(2), 
  1144 ;;  ap              2   70[COMRAM] PTR PTR void 
  1145 ;;		 -> printf@ap(2), 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  ll              8   74[COMRAM] long long 
  1148 ;;  llu             8    0        unsigned long long 
  1149 ;;  f               4    0        unsigned long long 
  1150 ;;  vp              3    0        PTR void 
  1151 ;;  ct              3    0        unsigned char [3]
  1152 ;;  cp              3    0        PTR unsigned char 
  1153 ;;  i               2    0        int 
  1154 ;;  done            2    0        int 
  1155 ;;  c               1    0        unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  2   66[COMRAM] int 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1165 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1166 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1168 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1169 ;;Total ram usage:       16 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    6
  1172 ;; This function calls:
  1173 ;;		_dtoa
  1174 ;;		_fputc
  1175 ;; This function is called by:
  1176 ;;		_vfprintf
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text4
  1181  002866                     __ptext4:
  1182                           	callstack 0
  1183  002866                     _vfpfcnvrt:
  1184                           	callstack 119
  1185  002866                     
  1186                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1187  002866  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1188  00286C  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1189  002872  C4DE F4F6          	movff	postinc2,tblptrl
  1190  002876  C4DD F4F7          	movff	postdec2,tblptrh
  1191  00287A                     	if	0	;tblptru may be non-zero
  1192  00287A                     	endif
  1193  00287A                     	if	0	;tblptru may be non-zero
  1194  00287A                     	endif
  1195  00287A  0008               	tblrd		*
  1196  00287C  50F5               	movf	tablat,w,c
  1197  00287E  0A25               	xorlw	37
  1198  002880  A4D8               	btfss	status,2,c
  1199  002882  EF45  F014         	goto	u961
  1200  002886  EF47  F014         	goto	u960
  1201  00288A                     u961:
  1202  00288A  EF09  F015         	goto	l1515
  1203  00288E                     u960:
  1204  00288E                     
  1205                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1206  00288E  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1207  002894  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1208  00289A  2ADE               	incf	postinc2,f,c
  1209  00289C  0E00               	movlw	0
  1210  00289E  22DD               	addwfc	postdec2,f,c
  1211  0028A0                     
  1212                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1213  0028A0  0E00               	movlw	0
  1214  0028A2  0105               	movlb	5	; () banked
  1215  0028A4  6F63               	movwf	(_width+1)& (0+255),b
  1216  0028A6  0E00               	movlw	0
  1217  0028A8  6F62               	movwf	_width& (0+255),b
  1218  0028AA  C562  F566         	movff	_width,_flags
  1219  0028AE  C563  F567         	movff	_width+1,_flags+1
  1220  0028B2                     
  1221                           ; BSR set to: 5
  1222                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1223  0028B2  6964               	setf	_prec& (0+255),b
  1224  0028B4  6965               	setf	(_prec+1)& (0+255),b
  1225  0028B6                     
  1226                           ; BSR set to: 5
  1227                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1228  0028B6  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1229  0028BC  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1230  0028C2  C4DE F4F6          	movff	postinc2,tblptrl
  1231  0028C6  C4DD F4F7          	movff	postdec2,tblptrh
  1232  0028CA                     	if	0	;tblptru may be non-zero
  1233  0028CA                     	endif
  1234  0028CA                     	if	0	;tblptru may be non-zero
  1235  0028CA                     	endif
  1236  0028CA  0008               	tblrd		*
  1237  0028CC  50F5               	movf	tablat,w,c
  1238  0028CE  0A64               	xorlw	100
  1239  0028D0  B4D8               	btfsc	status,2,c
  1240  0028D2  EF6D  F014         	goto	u971
  1241  0028D6  EF6F  F014         	goto	u970
  1242  0028DA                     u971:
  1243  0028DA  EF83  F014         	goto	l1493
  1244  0028DE                     u970:
  1245  0028DE                     
  1246                           ; BSR set to: 5
  1247  0028DE  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1248  0028E4  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1249  0028EA  C4DE F4F6          	movff	postinc2,tblptrl
  1250  0028EE  C4DD F4F7          	movff	postdec2,tblptrh
  1251  0028F2                     	if	0	;tblptru may be non-zero
  1252  0028F2                     	endif
  1253  0028F2                     	if	0	;tblptru may be non-zero
  1254  0028F2                     	endif
  1255  0028F2  0008               	tblrd		*
  1256  0028F4  50F5               	movf	tablat,w,c
  1257  0028F6  0A69               	xorlw	105
  1258  0028F8  A4D8               	btfss	status,2,c
  1259  0028FA  EF81  F014         	goto	u981
  1260  0028FE  EF83  F014         	goto	u980
  1261  002902                     u981:
  1262  002902  EFCD  F014         	goto	l1499
  1263  002906                     u980:
  1264  002906                     l1493:
  1265                           
  1266                           ; BSR set to: 5
  1267                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1268  002906  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1269  00290C  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1270  002912  2ADE               	incf	postinc2,f,c
  1271  002914  0E00               	movlw	0
  1272  002916  22DD               	addwfc	postdec2,f,c
  1273                           
  1274                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1275  002918  0061  F51C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  1276  00291E  0061  F520  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  1277  002924  0061 F37C  F549    	movff	indf2,??_vfpfcnvrt
  1278  00292A  0E02               	movlw	2
  1279  00292C  26DE               	addwf	postinc2,f,c
  1280  00292E  0061 F37C  F54A    	movff	indf2,??_vfpfcnvrt+1
  1281  002934  0E00               	movlw	0
  1282  002936  22DD               	addwfc	postdec2,f,c
  1283  002938  0061  F524  F4D9   	movff	??_vfpfcnvrt,fsr2l
  1284  00293E  0061  F528  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  1285  002944  0061 F378  F54B    	movff	postinc2,vfpfcnvrt@ll
  1286  00294A  0061 F374  F54C    	movff	postdec2,vfpfcnvrt@ll+1
  1287  002950  0E00               	movlw	0
  1288  002952  BE4C               	btfsc	(vfpfcnvrt@ll+1)^(0+1280),7,c
  1289  002954  0EFF               	movlw	-1
  1290  002956  6E4D               	movwf	(vfpfcnvrt@ll+2)^(0+1280),c
  1291  002958  6E4E               	movwf	(vfpfcnvrt@ll+3)^(0+1280),c
  1292  00295A  6E4F               	movwf	(vfpfcnvrt@ll+4)^(0+1280),c
  1293  00295C  6E50               	movwf	(vfpfcnvrt@ll+5)^(0+1280),c
  1294  00295E  6E51               	movwf	(vfpfcnvrt@ll+6)^(0+1280),c
  1295  002960  6E52               	movwf	(vfpfcnvrt@ll+7)^(0+1280),c
  1296  002962                     
  1297                           ; BSR set to: 5
  1298                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1299  002962  C543  F51F         	movff	vfpfcnvrt@fp,dtoa@fp
  1300  002966  C544  F520         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1301  00296A  C54B  F521         	movff	vfpfcnvrt@ll,dtoa@d
  1302  00296E  C54C  F522         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1303  002972  C54D  F523         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1304  002976  C54E  F524         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1305  00297A  C54F  F525         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1306  00297E  C550  F526         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1307  002982  C551  F527         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1308  002986  C552  F528         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1309  00298A  ECC1  F012         	call	_dtoa	;wreg free
  1310  00298E  C51F  F543         	movff	?_dtoa,?_vfpfcnvrt
  1311  002992  C520  F544         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1312  002996  EF28  F015         	goto	l874
  1313  00299A                     l1499:
  1314                           
  1315                           ; BSR set to: 5
  1316                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1317  00299A  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1318  0029A0  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1319  0029A6  C4DE F4F6          	movff	postinc2,tblptrl
  1320  0029AA  C4DD F4F7          	movff	postdec2,tblptrh
  1321  0029AE                     	if	0	;tblptru may be non-zero
  1322  0029AE                     	endif
  1323  0029AE                     	if	0	;tblptru may be non-zero
  1324  0029AE                     	endif
  1325  0029AE  0008               	tblrd		*
  1326  0029B0  50F5               	movf	tablat,w,c
  1327  0029B2  0A25               	xorlw	37
  1328  0029B4  A4D8               	btfss	status,2,c
  1329  0029B6  EFDF  F014         	goto	u991
  1330  0029BA  EFE1  F014         	goto	u990
  1331  0029BE                     u991:
  1332  0029BE  EFFA  F014         	goto	l1509
  1333  0029C2                     u990:
  1334  0029C2                     
  1335                           ; BSR set to: 5
  1336                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1337  0029C2  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1338  0029C8  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1339  0029CE  2ADE               	incf	postinc2,f,c
  1340  0029D0  0E00               	movlw	0
  1341  0029D2  22DD               	addwfc	postdec2,f,c
  1342  0029D4                     
  1343                           ; BSR set to: 5
  1344                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1345  0029D4  0E00               	movlw	0
  1346  0029D6  6E03               	movwf	(fputc@c+1)^(0+1280),c
  1347  0029D8  0E25               	movlw	37
  1348  0029DA  6E02               	movwf	fputc@c^(0+1280),c
  1349  0029DC  C543  F504         	movff	vfpfcnvrt@fp,fputc@fp
  1350  0029E0  C544  F505         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1351  0029E4  ECF6  F017         	call	_fputc	;wreg free
  1352  0029E8                     l1505:
  1353                           
  1354                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1355  0029E8  0E00               	movlw	0
  1356  0029EA  6E44               	movwf	(?_vfpfcnvrt+1)^(0+1280),c
  1357  0029EC  0E01               	movlw	1
  1358  0029EE  6E43               	movwf	?_vfpfcnvrt^(0+1280),c
  1359  0029F0  EF28  F015         	goto	l874
  1360  0029F4                     l1509:
  1361                           
  1362                           ; BSR set to: 5
  1363                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1364  0029F4  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1365  0029FA  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1366  002A00  2ADE               	incf	postinc2,f,c
  1367  002A02  0E00               	movlw	0
  1368  002A04  22DD               	addwfc	postdec2,f,c
  1369  002A06                     
  1370                           ; BSR set to: 5
  1371                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1372  002A06  0E00               	movlw	0
  1373  002A08  6E44               	movwf	(?_vfpfcnvrt+1)^(0+1280),c
  1374  002A0A  0E00               	movlw	0
  1375  002A0C  6E43               	movwf	?_vfpfcnvrt^(0+1280),c
  1376  002A0E  EF28  F015         	goto	l874
  1377  002A12                     l1515:
  1378                           
  1379                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1380  002A12  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1381  002A18  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1382  002A1E  C4DE F4F6          	movff	postinc2,tblptrl
  1383  002A22  C4DD F4F7          	movff	postdec2,tblptrh
  1384  002A26                     	if	0	;tblptru may be non-zero
  1385  002A26                     	endif
  1386  002A26                     	if	0	;tblptru may be non-zero
  1387  002A26                     	endif
  1388  002A26  0008               	tblrd		*
  1389  002A28  50F5               	movf	tablat,w,c
  1390  002A2A  6E02               	movwf	fputc@c^(0+1280),c
  1391  002A2C  6A03               	clrf	(fputc@c+1)^(0+1280),c
  1392  002A2E  C543  F504         	movff	vfpfcnvrt@fp,fputc@fp
  1393  002A32  C544  F505         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1394  002A36  ECF6  F017         	call	_fputc	;wreg free
  1395  002A3A                     
  1396                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1397  002A3A  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1398  002A40  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1399  002A46  2ADE               	incf	postinc2,f,c
  1400  002A48  0E00               	movlw	0
  1401  002A4A  22DD               	addwfc	postdec2,f,c
  1402  002A4C  EFF4  F014         	goto	l1505
  1403  002A50                     l874:
  1404  002A50  0012               	return		;funcret
  1405  002A52                     __end_of_vfpfcnvrt:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function _dtoa *****************
  1409 ;; Defined at:
  1410 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  1413 ;;		 -> NULL(0), 
  1414 ;;  d               8   32[COMRAM] long long 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  n               8   56[COMRAM] long long 
  1417 ;;  i               2   64[COMRAM] int 
  1418 ;;  s               2   54[COMRAM] int 
  1419 ;;  w               2   52[COMRAM] int 
  1420 ;;  p               2   50[COMRAM] int 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  2   30[COMRAM] int 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1430 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1431 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1432 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1433 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1434 ;;Total ram usage:       36 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    5
  1437 ;; This function calls:
  1438 ;;		___aodiv
  1439 ;;		___aomod
  1440 ;;		_abs
  1441 ;;		_pad
  1442 ;; This function is called by:
  1443 ;;		_vfpfcnvrt
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text5
  1448  002582                     __ptext5:
  1449                           	callstack 0
  1450  002582                     _dtoa:
  1451                           	callstack 119
  1452  002582                     
  1453                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1454  002582  C521  F539         	movff	dtoa@d,dtoa@n
  1455  002586  C522  F53A         	movff	dtoa@d+1,dtoa@n+1
  1456  00258A  C523  F53B         	movff	dtoa@d+2,dtoa@n+2
  1457  00258E  C524  F53C         	movff	dtoa@d+3,dtoa@n+3
  1458  002592  C525  F53D         	movff	dtoa@d+4,dtoa@n+4
  1459  002596  C526  F53E         	movff	dtoa@d+5,dtoa@n+5
  1460  00259A  C527  F53F         	movff	dtoa@d+6,dtoa@n+6
  1461  00259E  C528  F540         	movff	dtoa@d+7,dtoa@n+7
  1462  0025A2                     
  1463                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1464  0025A2  BE40               	btfsc	(dtoa@n+7)^(0+1280),7,c
  1465  0025A4  EFD6  F012         	goto	u811
  1466  0025A8  EFD9  F012         	goto	u810
  1467  0025AC                     u811:
  1468  0025AC  0E01               	movlw	1
  1469  0025AE  EFDA  F012         	goto	u820
  1470  0025B2                     u810:
  1471  0025B2  0E00               	movlw	0
  1472  0025B4                     u820:
  1473  0025B4  6E37               	movwf	dtoa@s^(0+1280),c
  1474  0025B6  6A38               	clrf	(dtoa@s+1)^(0+1280),c
  1475                           
  1476                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1477  0025B8  5037               	movf	dtoa@s^(0+1280),w,c
  1478  0025BA  1038               	iorwf	(dtoa@s+1)^(0+1280),w,c
  1479  0025BC  B4D8               	btfsc	status,2,c
  1480  0025BE  EFE3  F012         	goto	u831
  1481  0025C2  EFE5  F012         	goto	u830
  1482  0025C6                     u831:
  1483  0025C6  EFF5  F012         	goto	l1425
  1484  0025CA                     u830:
  1485  0025CA                     
  1486                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1487  0025CA  1E40               	comf	(dtoa@n+7)^(0+1280),f,c
  1488  0025CC  1E3F               	comf	(dtoa@n+6)^(0+1280),f,c
  1489  0025CE  1E3E               	comf	(dtoa@n+5)^(0+1280),f,c
  1490  0025D0  1E3D               	comf	(dtoa@n+4)^(0+1280),f,c
  1491  0025D2  1E3C               	comf	(dtoa@n+3)^(0+1280),f,c
  1492  0025D4  1E3B               	comf	(dtoa@n+2)^(0+1280),f,c
  1493  0025D6  1E3A               	comf	(dtoa@n+1)^(0+1280),f,c
  1494  0025D8  6C39               	negf	dtoa@n^(0+1280),c
  1495  0025DA  0E00               	movlw	0
  1496  0025DC  223A               	addwfc	(dtoa@n+1)^(0+1280),f,c
  1497  0025DE  223B               	addwfc	(dtoa@n+2)^(0+1280),f,c
  1498  0025E0  223C               	addwfc	(dtoa@n+3)^(0+1280),f,c
  1499  0025E2  223D               	addwfc	(dtoa@n+4)^(0+1280),f,c
  1500  0025E4  223E               	addwfc	(dtoa@n+5)^(0+1280),f,c
  1501  0025E6  223F               	addwfc	(dtoa@n+6)^(0+1280),f,c
  1502  0025E8  2240               	addwfc	(dtoa@n+7)^(0+1280),f,c
  1503  0025EA                     l1425:
  1504                           
  1505                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1506  0025EA  0105               	movlb	5	; () banked
  1507  0025EC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1508  0025EE  EFFB  F012         	goto	u841
  1509  0025F2  EFFD  F012         	goto	u840
  1510  0025F6                     u841:
  1511  0025F6  EFFE  F012         	goto	l1429
  1512  0025FA                     u840:
  1513  0025FA                     
  1514                           ; BSR set to: 5
  1515                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1516  0025FA  9366               	bcf	_flags& (0+255),1,b
  1517  0025FC                     l1429:
  1518                           
  1519                           ; BSR set to: 5
  1520                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1521  0025FC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1522  0025FE  EF0B  F013         	goto	u850
  1523  002602  5165               	movf	(_prec+1)& (0+255),w,b
  1524  002604  E106               	bnz	u851
  1525  002606  0564               	decf	_prec& (0+255),w,b
  1526  002608  B0D8               	btfsc	status,0,c
  1527  00260A  EF09  F013         	goto	u851
  1528  00260E  EF0B  F013         	goto	u850
  1529  002612                     u851:
  1530  002612  EF11  F013         	goto	l847
  1531  002616                     u850:
  1532  002616                     
  1533                           ; BSR set to: 5
  1534  002616  0E00               	movlw	0
  1535  002618  6E34               	movwf	(dtoa@p+1)^(0+1280),c
  1536  00261A  0E01               	movlw	1
  1537  00261C  6E33               	movwf	dtoa@p^(0+1280),c
  1538  00261E  EF15  F013         	goto	l849
  1539  002622                     l847:
  1540                           
  1541                           ; BSR set to: 5
  1542  002622  C564  F533         	movff	_prec,dtoa@p
  1543  002626  C565  F534         	movff	_prec+1,dtoa@p+1
  1544  00262A                     l849:
  1545                           
  1546                           ; BSR set to: 5
  1547                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1548  00262A  C562  F535         	movff	_width,dtoa@w
  1549  00262E  C563  F536         	movff	_width+1,dtoa@w+1
  1550  002632                     
  1551                           ; BSR set to: 5
  1552                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1553  002632  5037               	movf	dtoa@s^(0+1280),w,c
  1554  002634  1038               	iorwf	(dtoa@s+1)^(0+1280),w,c
  1555  002636  A4D8               	btfss	status,2,c
  1556  002638  EF20  F013         	goto	u861
  1557  00263C  EF22  F013         	goto	u860
  1558  002640                     u861:
  1559  002640  EF29  F013         	goto	l1437
  1560  002644                     u860:
  1561  002644                     
  1562                           ; BSR set to: 5
  1563  002644  A566               	btfss	_flags& (0+255),2,b
  1564  002646  EF27  F013         	goto	u871
  1565  00264A  EF29  F013         	goto	u870
  1566  00264E                     u871:
  1567  00264E  EF2C  F013         	goto	l1439
  1568  002652                     u870:
  1569  002652                     l1437:
  1570                           
  1571                           ; BSR set to: 5
  1572                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  1573  002652  0635               	decf	dtoa@w^(0+1280),f,c
  1574  002654  A0D8               	btfss	status,0,c
  1575  002656  0636               	decf	(dtoa@w+1)^(0+1280),f,c
  1576  002658                     l1439:
  1577                           
  1578                           ; BSR set to: 5
  1579                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1580  002658  0E00               	movlw	0
  1581  00265A  6E42               	movwf	(dtoa@i+1)^(0+1280),c
  1582  00265C  0E1F               	movlw	31
  1583  00265E  6E41               	movwf	dtoa@i^(0+1280),c
  1584  002660                     
  1585                           ; BSR set to: 5
  1586                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1587  002660  0E00               	movlw	0
  1588  002662  6F87               	movwf	(_dbuf+31)& (0+255),b
  1589                           
  1590                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1591  002664  EFB0  F013         	goto	l1453
  1592  002668                     l1443:
  1593                           
  1594                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  1595  002668  0641               	decf	dtoa@i^(0+1280),f,c
  1596  00266A  A0D8               	btfss	status,0,c
  1597  00266C  0642               	decf	(dtoa@i+1)^(0+1280),f,c
  1598  00266E                     
  1599                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1600  00266E  0E68               	movlw	low _dbuf
  1601  002670  2441               	addwf	dtoa@i^(0+1280),w,c
  1602  002672  6ED9               	movwf	fsr2l,c
  1603  002674  0E05               	movlw	high _dbuf
  1604  002676  2042               	addwfc	(dtoa@i+1)^(0+1280),w,c
  1605  002678  6EDA               	movwf	fsr2h,c
  1606  00267A  C539  F501         	movff	dtoa@n,___aomod@dividend
  1607  00267E  C53A  F502         	movff	dtoa@n+1,___aomod@dividend+1
  1608  002682  C53B  F503         	movff	dtoa@n+2,___aomod@dividend+2
  1609  002686  C53C  F504         	movff	dtoa@n+3,___aomod@dividend+3
  1610  00268A  C53D  F505         	movff	dtoa@n+4,___aomod@dividend+4
  1611  00268E  C53E  F506         	movff	dtoa@n+5,___aomod@dividend+5
  1612  002692  C53F  F507         	movff	dtoa@n+6,___aomod@dividend+6
  1613  002696  C540  F508         	movff	dtoa@n+7,___aomod@dividend+7
  1614  00269A  0E0A               	movlw	10
  1615  00269C  6E09               	movwf	___aomod@divisor^(0+1280),c
  1616  00269E  0E00               	movlw	0
  1617  0026A0  6E0A               	movwf	(___aomod@divisor+1)^(0+1280),c
  1618  0026A2  0E00               	movlw	0
  1619  0026A4  6E0B               	movwf	(___aomod@divisor+2)^(0+1280),c
  1620  0026A6  0E00               	movlw	0
  1621  0026A8  6E0C               	movwf	(___aomod@divisor+3)^(0+1280),c
  1622  0026AA  0E00               	movlw	0
  1623  0026AC  6E0D               	movwf	(___aomod@divisor+4)^(0+1280),c
  1624  0026AE  0E00               	movlw	0
  1625  0026B0  6E0E               	movwf	(___aomod@divisor+5)^(0+1280),c
  1626  0026B2  0E00               	movlw	0
  1627  0026B4  6E0F               	movwf	(___aomod@divisor+6)^(0+1280),c
  1628  0026B6  0E00               	movlw	0
  1629  0026B8  6E10               	movwf	(___aomod@divisor+7)^(0+1280),c
  1630  0026BA  ECE1  F016         	call	___aomod	;wreg free
  1631  0026BE  C501  F529         	movff	?___aomod,??_dtoa
  1632  0026C2  C502  F52A         	movff	?___aomod+1,??_dtoa+1
  1633  0026C6  C503  F52B         	movff	?___aomod+2,??_dtoa+2
  1634  0026CA  C504  F52C         	movff	?___aomod+3,??_dtoa+3
  1635  0026CE  C505  F52D         	movff	?___aomod+4,??_dtoa+4
  1636  0026D2  C506  F52E         	movff	?___aomod+5,??_dtoa+5
  1637  0026D6  C507  F52F         	movff	?___aomod+6,??_dtoa+6
  1638  0026DA  C508  F530         	movff	?___aomod+7,??_dtoa+7
  1639  0026DE  C529  F513         	movff	??_dtoa,abs@a
  1640  0026E2  C52B  F514         	movff	??_dtoa+2,abs@a+1
  1641  0026E6  ECD6  F018         	call	_abs	;wreg free
  1642  0026EA  5013               	movf	?_abs^(0+1280),w,c
  1643  0026EC  0F30               	addlw	48
  1644  0026EE  6EDF               	movwf	indf2,c
  1645  0026F0                     
  1646                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  1647  0026F0  0633               	decf	dtoa@p^(0+1280),f,c
  1648  0026F2  A0D8               	btfss	status,0,c
  1649  0026F4  0634               	decf	(dtoa@p+1)^(0+1280),f,c
  1650  0026F6                     
  1651                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  1652  0026F6  0635               	decf	dtoa@w^(0+1280),f,c
  1653  0026F8  A0D8               	btfss	status,0,c
  1654  0026FA  0636               	decf	(dtoa@w+1)^(0+1280),f,c
  1655  0026FC                     
  1656                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1657  0026FC  C539  F501         	movff	dtoa@n,___aodiv@dividend
  1658  002700  C53A  F502         	movff	dtoa@n+1,___aodiv@dividend+1
  1659  002704  C53B  F503         	movff	dtoa@n+2,___aodiv@dividend+2
  1660  002708  C53C  F504         	movff	dtoa@n+3,___aodiv@dividend+3
  1661  00270C  C53D  F505         	movff	dtoa@n+4,___aodiv@dividend+4
  1662  002710  C53E  F506         	movff	dtoa@n+5,___aodiv@dividend+5
  1663  002714  C53F  F507         	movff	dtoa@n+6,___aodiv@dividend+6
  1664  002718  C540  F508         	movff	dtoa@n+7,___aodiv@dividend+7
  1665  00271C  0E0A               	movlw	10
  1666  00271E  6E09               	movwf	___aodiv@divisor^(0+1280),c
  1667  002720  0E00               	movlw	0
  1668  002722  6E0A               	movwf	(___aodiv@divisor+1)^(0+1280),c
  1669  002724  0E00               	movlw	0
  1670  002726  6E0B               	movwf	(___aodiv@divisor+2)^(0+1280),c
  1671  002728  0E00               	movlw	0
  1672  00272A  6E0C               	movwf	(___aodiv@divisor+3)^(0+1280),c
  1673  00272C  0E00               	movlw	0
  1674  00272E  6E0D               	movwf	(___aodiv@divisor+4)^(0+1280),c
  1675  002730  0E00               	movlw	0
  1676  002732  6E0E               	movwf	(___aodiv@divisor+5)^(0+1280),c
  1677  002734  0E00               	movlw	0
  1678  002736  6E0F               	movwf	(___aodiv@divisor+6)^(0+1280),c
  1679  002738  0E00               	movlw	0
  1680  00273A  6E10               	movwf	(___aodiv@divisor+7)^(0+1280),c
  1681  00273C  EC1D  F016         	call	___aodiv	;wreg free
  1682  002740  C501  F539         	movff	?___aodiv,dtoa@n
  1683  002744  C502  F53A         	movff	?___aodiv+1,dtoa@n+1
  1684  002748  C503  F53B         	movff	?___aodiv+2,dtoa@n+2
  1685  00274C  C504  F53C         	movff	?___aodiv+3,dtoa@n+3
  1686  002750  C505  F53D         	movff	?___aodiv+4,dtoa@n+4
  1687  002754  C506  F53E         	movff	?___aodiv+5,dtoa@n+5
  1688  002758  C507  F53F         	movff	?___aodiv+6,dtoa@n+6
  1689  00275C  C508  F540         	movff	?___aodiv+7,dtoa@n+7
  1690  002760                     l1453:
  1691                           
  1692                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1693  002760  BE42               	btfsc	(dtoa@i+1)^(0+1280),7,c
  1694  002762  EFBB  F013         	goto	u881
  1695  002766  5042               	movf	(dtoa@i+1)^(0+1280),w,c
  1696  002768  E108               	bnz	u880
  1697  00276A  0441               	decf	dtoa@i^(0+1280),w,c
  1698  00276C  A0D8               	btfss	status,0,c
  1699  00276E  EFBB  F013         	goto	u881
  1700  002772  EFBD  F013         	goto	u880
  1701  002776                     u881:
  1702  002776  EFEE  F013         	goto	l1463
  1703  00277A                     u880:
  1704  00277A  5039               	movf	dtoa@n^(0+1280),w,c
  1705  00277C  103A               	iorwf	(dtoa@n+1)^(0+1280),w,c
  1706  00277E  103B               	iorwf	(dtoa@n+2)^(0+1280),w,c
  1707  002780  103C               	iorwf	(dtoa@n+3)^(0+1280),w,c
  1708  002782  103D               	iorwf	(dtoa@n+4)^(0+1280),w,c
  1709  002784  103E               	iorwf	(dtoa@n+5)^(0+1280),w,c
  1710  002786  103F               	iorwf	(dtoa@n+6)^(0+1280),w,c
  1711  002788  1040               	iorwf	(dtoa@n+7)^(0+1280),w,c
  1712  00278A  A4D8               	btfss	status,2,c
  1713  00278C  EFCA  F013         	goto	u891
  1714  002790  EFCC  F013         	goto	u890
  1715  002794                     u891:
  1716  002794  EF34  F013         	goto	l1443
  1717  002798                     u890:
  1718  002798  BE34               	btfsc	(dtoa@p+1)^(0+1280),7,c
  1719  00279A  EFD9  F013         	goto	u900
  1720  00279E  5034               	movf	(dtoa@p+1)^(0+1280),w,c
  1721  0027A0  E106               	bnz	u901
  1722  0027A2  0433               	decf	dtoa@p^(0+1280),w,c
  1723  0027A4  B0D8               	btfsc	status,0,c
  1724  0027A6  EFD7  F013         	goto	u901
  1725  0027AA  EFD9  F013         	goto	u900
  1726  0027AE                     u901:
  1727  0027AE  EF34  F013         	goto	l1443
  1728  0027B2                     u900:
  1729  0027B2  BE36               	btfsc	(dtoa@w+1)^(0+1280),7,c
  1730  0027B4  EFE4  F013         	goto	u911
  1731  0027B8  5036               	movf	(dtoa@w+1)^(0+1280),w,c
  1732  0027BA  E108               	bnz	u910
  1733  0027BC  0435               	decf	dtoa@w^(0+1280),w,c
  1734  0027BE  A0D8               	btfss	status,0,c
  1735  0027C0  EFE4  F013         	goto	u911
  1736  0027C4  EFE6  F013         	goto	u910
  1737  0027C8                     u911:
  1738  0027C8  EFEE  F013         	goto	l1463
  1739  0027CC                     u910:
  1740  0027CC  0105               	movlb	5	; () banked
  1741  0027CE  B366               	btfsc	_flags& (0+255),1,b
  1742  0027D0  EFEC  F013         	goto	u921
  1743  0027D4  EFEE  F013         	goto	u920
  1744  0027D8                     u921:
  1745  0027D8  EF34  F013         	goto	l1443
  1746  0027DC                     u920:
  1747  0027DC                     l1463:
  1748                           
  1749                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1750  0027DC  5037               	movf	dtoa@s^(0+1280),w,c
  1751  0027DE  1038               	iorwf	(dtoa@s+1)^(0+1280),w,c
  1752  0027E0  A4D8               	btfss	status,2,c
  1753  0027E2  EFF5  F013         	goto	u931
  1754  0027E6  EFF7  F013         	goto	u930
  1755  0027EA                     u931:
  1756  0027EA  EFFF  F013         	goto	l1467
  1757  0027EE                     u930:
  1758  0027EE  0105               	movlb	5	; () banked
  1759  0027F0  A566               	btfss	_flags& (0+255),2,b
  1760  0027F2  EFFD  F013         	goto	u941
  1761  0027F6  EFFF  F013         	goto	u940
  1762  0027FA                     u941:
  1763  0027FA  EF1E  F014         	goto	l1477
  1764  0027FE                     u940:
  1765  0027FE                     l1467:
  1766                           
  1767                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  1768  0027FE  0641               	decf	dtoa@i^(0+1280),f,c
  1769  002800  A0D8               	btfss	status,0,c
  1770  002802  0642               	decf	(dtoa@i+1)^(0+1280),f,c
  1771  002804                     
  1772                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1773  002804  5037               	movf	dtoa@s^(0+1280),w,c
  1774  002806  1038               	iorwf	(dtoa@s+1)^(0+1280),w,c
  1775  002808  A4D8               	btfss	status,2,c
  1776  00280A  EF09  F014         	goto	u951
  1777  00280E  EF0B  F014         	goto	u950
  1778  002812                     u951:
  1779  002812  EF11  F014         	goto	l1473
  1780  002816                     u950:
  1781  002816  0E00               	movlw	0
  1782  002818  6E32               	movwf	(_dtoa$1402+1)^(0+1280),c
  1783  00281A  0E2B               	movlw	43
  1784  00281C  6E31               	movwf	_dtoa$1402^(0+1280),c
  1785  00281E  EF15  F014         	goto	l1475
  1786  002822                     l1473:
  1787  002822  0E00               	movlw	0
  1788  002824  6E32               	movwf	(_dtoa$1402+1)^(0+1280),c
  1789  002826  0E2D               	movlw	45
  1790  002828  6E31               	movwf	_dtoa$1402^(0+1280),c
  1791  00282A                     l1475:
  1792  00282A  0E68               	movlw	low _dbuf
  1793  00282C  2441               	addwf	dtoa@i^(0+1280),w,c
  1794  00282E  6ED9               	movwf	fsr2l,c
  1795  002830  0E05               	movlw	high _dbuf
  1796  002832  2042               	addwfc	(dtoa@i+1)^(0+1280),w,c
  1797  002834  6EDA               	movwf	fsr2h,c
  1798  002836  0061  F4C4  F4DF   	movff	_dtoa$1402,indf2
  1799  00283C                     l1477:
  1800                           
  1801                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1802  00283C  C51F  F514         	movff	dtoa@fp,pad@fp
  1803  002840  C520  F515         	movff	dtoa@fp+1,pad@fp+1
  1804  002844  0E68               	movlw	low _dbuf
  1805  002846  2441               	addwf	dtoa@i^(0+1280),w,c
  1806  002848  6E16               	movwf	pad@buf^(0+1280),c
  1807  00284A  0E05               	movlw	high _dbuf
  1808  00284C  2042               	addwfc	(dtoa@i+1)^(0+1280),w,c
  1809  00284E  6E17               	movwf	(pad@buf+1)^(0+1280),c
  1810  002850  C535  F518         	movff	dtoa@w,pad@p
  1811  002854  C536  F519         	movff	dtoa@w+1,pad@p+1
  1812  002858  EC93  F017         	call	_pad	;wreg free
  1813  00285C  C514  F51F         	movff	?_pad,?_dtoa
  1814  002860  C515  F520         	movff	?_pad+1,?_dtoa+1
  1815  002864  0012               	return		;funcret
  1816  002866                     __end_of_dtoa:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _pad *****************
  1820 ;; Defined at:
  1821 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  1824 ;;		 -> NULL(0), 
  1825 ;;  buf             2   21[COMRAM] PTR unsigned char 
  1826 ;;		 -> dbuf(32), 
  1827 ;;  p               2   23[COMRAM] int 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  w               2   28[COMRAM] int 
  1830 ;;  i               2   26[COMRAM] int 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  2   19[COMRAM] int 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1840 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1841 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1843 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1844 ;;Total ram usage:       11 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    4
  1847 ;; This function calls:
  1848 ;;		_fputc
  1849 ;;		_fputs
  1850 ;;		_strlen
  1851 ;; This function is called by:
  1852 ;;		_dtoa
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text6
  1857  002F26                     __ptext6:
  1858                           	callstack 0
  1859  002F26                     _pad:
  1860                           	callstack 119
  1861  002F26                     
  1862                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1863  002F26  0105               	movlb	5	; () banked
  1864  002F28  A166               	btfss	_flags& (0+255),0,b
  1865  002F2A  EF99  F017         	goto	u761
  1866  002F2E  EF9B  F017         	goto	u760
  1867  002F32                     u761:
  1868  002F32  EFA5  F017         	goto	l1397
  1869  002F36                     u760:
  1870  002F36                     
  1871                           ; BSR set to: 5
  1872                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1873  002F36  C516  F50B         	movff	pad@buf,fputs@s
  1874  002F3A  C517  F50C         	movff	pad@buf+1,fputs@s+1
  1875  002F3E  C514  F50D         	movff	pad@fp,fputs@fp
  1876  002F42  C515  F50E         	movff	pad@fp+1,fputs@fp+1
  1877  002F46  EC44  F018         	call	_fputs	;wreg free
  1878  002F4A                     l1397:
  1879                           
  1880                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1881  002F4A  BE19               	btfsc	(pad@p+1)^(0+1280),7,c
  1882  002F4C  EFAA  F017         	goto	u771
  1883  002F50  EFAC  F017         	goto	u770
  1884  002F54                     u771:
  1885  002F54  EFB2  F017         	goto	l1401
  1886  002F58                     u770:
  1887  002F58  C518  F51D         	movff	pad@p,pad@w
  1888  002F5C  C519  F51E         	movff	pad@p+1,pad@w+1
  1889  002F60  EFB6  F017         	goto	l836
  1890  002F64                     l1401:
  1891  002F64  0E00               	movlw	0
  1892  002F66  6E1E               	movwf	(pad@w+1)^(0+1280),c
  1893  002F68  0E00               	movlw	0
  1894  002F6A  6E1D               	movwf	pad@w^(0+1280),c
  1895  002F6C                     l836:
  1896                           
  1897                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1898  002F6C  0E00               	movlw	0
  1899  002F6E  6E1C               	movwf	(pad@i+1)^(0+1280),c
  1900  002F70  0E00               	movlw	0
  1901  002F72  6E1B               	movwf	pad@i^(0+1280),c
  1902                           
  1903                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1904  002F74  EFC8  F017         	goto	l1407
  1905  002F78                     l1403:
  1906                           
  1907                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1908  002F78  0E00               	movlw	0
  1909  002F7A  6E03               	movwf	(fputc@c+1)^(0+1280),c
  1910  002F7C  0E20               	movlw	32
  1911  002F7E  6E02               	movwf	fputc@c^(0+1280),c
  1912  002F80  C514  F504         	movff	pad@fp,fputc@fp
  1913  002F84  C515  F505         	movff	pad@fp+1,fputc@fp+1
  1914  002F88  ECF6  F017         	call	_fputc	;wreg free
  1915  002F8C                     
  1916                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1917  002F8C  4A1B               	infsnz	pad@i^(0+1280),f,c
  1918  002F8E  2A1C               	incf	(pad@i+1)^(0+1280),f,c
  1919  002F90                     l1407:
  1920                           
  1921                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1922  002F90  501D               	movf	pad@w^(0+1280),w,c
  1923  002F92  5C1B               	subwf	pad@i^(0+1280),w,c
  1924  002F94  501C               	movf	(pad@i+1)^(0+1280),w,c
  1925  002F96  0A80               	xorlw	128
  1926  002F98  6E1A               	movwf	??_pad^(0+1280),c
  1927  002F9A  501E               	movf	(pad@w+1)^(0+1280),w,c
  1928  002F9C  0A80               	xorlw	128
  1929  002F9E  581A               	subwfb	??_pad^(0+1280),w,c
  1930  002FA0  A0D8               	btfss	status,0,c
  1931  002FA2  EFD5  F017         	goto	u781
  1932  002FA6  EFD7  F017         	goto	u780
  1933  002FAA                     u781:
  1934  002FAA  EFBC  F017         	goto	l1403
  1935  002FAE                     u780:
  1936  002FAE                     
  1937                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1938  002FAE  0105               	movlb	5	; () banked
  1939  002FB0  B166               	btfsc	_flags& (0+255),0,b
  1940  002FB2  EFDD  F017         	goto	u791
  1941  002FB6  EFDF  F017         	goto	u790
  1942  002FBA                     u791:
  1943  002FBA  EFE9  F017         	goto	l1411
  1944  002FBE                     u790:
  1945  002FBE                     
  1946                           ; BSR set to: 5
  1947                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1948  002FBE  C516  F50B         	movff	pad@buf,fputs@s
  1949  002FC2  C517  F50C         	movff	pad@buf+1,fputs@s+1
  1950  002FC6  C514  F50D         	movff	pad@fp,fputs@fp
  1951  002FCA  C515  F50E         	movff	pad@fp+1,fputs@fp+1
  1952  002FCE  EC44  F018         	call	_fputs	;wreg free
  1953  002FD2                     l1411:
  1954                           
  1955                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1956  002FD2  C516  F501         	movff	pad@buf,strlen@s
  1957  002FD6  C517  F502         	movff	pad@buf+1,strlen@s+1
  1958  002FDA  EC14  F019         	call	_strlen	;wreg free
  1959  002FDE  501D               	movf	pad@w^(0+1280),w,c
  1960  002FE0  2401               	addwf	?_strlen^(0+1280),w,c
  1961  002FE2  6E14               	movwf	?_pad^(0+1280),c
  1962  002FE4  501E               	movf	(pad@w+1)^(0+1280),w,c
  1963  002FE6  2002               	addwfc	(?_strlen+1)^(0+1280),w,c
  1964  002FE8  6E15               	movwf	(?_pad+1)^(0+1280),c
  1965  002FEA  0012               	return		;funcret
  1966  002FEC                     __end_of_pad:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _strlen *****************
  1970 ;; Defined at:
  1971 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1974 ;;		 -> dbuf(32), 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1977 ;;		 -> dbuf(32), 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  2    0[COMRAM] unsigned int 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1991 ;;Total ram usage:        4 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_pad
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text7
  2002  003228                     __ptext7:
  2003                           	callstack 0
  2004  003228                     _strlen:
  2005                           	callstack 121
  2006  003228  C501  F503         	movff	strlen@s,strlen@a
  2007  00322C  C502  F504         	movff	strlen@s+1,strlen@a+1
  2008  003230  EF1C  F019         	goto	l1307
  2009  003234                     l1305:
  2010  003234  4A01               	infsnz	strlen@s^(0+1280),f,c
  2011  003236  2A02               	incf	(strlen@s+1)^(0+1280),f,c
  2012  003238                     l1307:
  2013  003238  0061  F404  F4D9   	movff	strlen@s,fsr2l
  2014  00323E  0061  F408  F4DA   	movff	strlen@s+1,fsr2h
  2015  003244  50DF               	movf	indf2,w,c
  2016  003246  A4D8               	btfss	status,2,c
  2017  003248  EF28  F019         	goto	u621
  2018  00324C  EF2A  F019         	goto	u620
  2019  003250                     u621:
  2020  003250  EF1A  F019         	goto	l1305
  2021  003254                     u620:
  2022  003254  5003               	movf	strlen@a^(0+1280),w,c
  2023  003256  5C01               	subwf	strlen@s^(0+1280),w,c
  2024  003258  6E01               	movwf	?_strlen^(0+1280),c
  2025  00325A  5004               	movf	(strlen@a+1)^(0+1280),w,c
  2026  00325C  5802               	subwfb	(strlen@s+1)^(0+1280),w,c
  2027  00325E  6E02               	movwf	(?_strlen+1)^(0+1280),c
  2028  003260  0012               	return		;funcret
  2029  003262                     __end_of_strlen:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _fputs *****************
  2033 ;; Defined at:
  2034 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2037 ;;		 -> dbuf(32), STR_1(30), 
  2038 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2039 ;;		 -> NULL(0), 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  i               2   17[COMRAM] int 
  2042 ;;  c               1   16[COMRAM] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  2   10[COMRAM] int 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2053 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2055 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2056 ;;Total ram usage:        9 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    3
  2059 ;; This function calls:
  2060 ;;		_fputc
  2061 ;; This function is called by:
  2062 ;;		_pad
  2063 ;;		_puts
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text8
  2068  003088                     __ptext8:
  2069                           	callstack 0
  2070  003088                     _fputs:
  2071                           	callstack 123
  2072  003088  0E00               	movlw	0
  2073  00308A  6E13               	movwf	(fputs@i+1)^(0+1280),c
  2074  00308C  0E00               	movlw	0
  2075  00308E  6E12               	movwf	fputs@i^(0+1280),c
  2076  003090  EF55  F018         	goto	l1301
  2077  003094                     l1297:
  2078  003094  C511  F502         	movff	fputs@c,fputc@c
  2079  003098  6A03               	clrf	(fputc@c+1)^(0+1280),c
  2080  00309A  C50D  F504         	movff	fputs@fp,fputc@fp
  2081  00309E  C50E  F505         	movff	fputs@fp+1,fputc@fp+1
  2082  0030A2  ECF6  F017         	call	_fputc	;wreg free
  2083  0030A6  4A12               	infsnz	fputs@i^(0+1280),f,c
  2084  0030A8  2A13               	incf	(fputs@i+1)^(0+1280),f,c
  2085  0030AA                     l1301:
  2086  0030AA  5012               	movf	fputs@i^(0+1280),w,c
  2087  0030AC  240B               	addwf	fputs@s^(0+1280),w,c
  2088  0030AE  6E0F               	movwf	??_fputs^(0+1280),c
  2089  0030B0  5013               	movf	(fputs@i+1)^(0+1280),w,c
  2090  0030B2  200C               	addwfc	(fputs@s+1)^(0+1280),w,c
  2091  0030B4  6E10               	movwf	(??_fputs+1)^(0+1280),c
  2092  0030B6  0061  F43C  F4F6   	movff	??_fputs,tblptrl
  2093  0030BC  0061  F440  F4F7   	movff	??_fputs+1,tblptrh
  2094  0030C2  0E00               	movlw	low (__smallconst shr (0+16))
  2095  0030C4  6EF8               	movwf	tblptru,c
  2096  0030C6  0E24               	movlw	(high __ramtop+-1)
  2097  0030C8  64F7               	cpfsgt	tblptrh,c
  2098  0030CA  D003               	bra	u607
  2099  0030CC  0008               	tblrd		*
  2100  0030CE  50F5               	movf	tablat,w,c
  2101  0030D0  D005               	bra	u600
  2102  0030D2                     u607:
  2103  0030D2  C4F6 F4E1          	movff	tblptrl,fsr1l
  2104  0030D6  C4F7 F4E2          	movff	tblptrh,fsr1h
  2105  0030DA  50E7               	movf	indf1,w,c
  2106  0030DC                     u600:
  2107  0030DC  6E11               	movwf	fputs@c^(0+1280),c
  2108  0030DE  5011               	movf	fputs@c^(0+1280),w,c
  2109  0030E0  A4D8               	btfss	status,2,c
  2110  0030E2  EF75  F018         	goto	u611
  2111  0030E6  EF77  F018         	goto	u610
  2112  0030EA                     u611:
  2113  0030EA  EF4A  F018         	goto	l1297
  2114  0030EE                     u610:
  2115  0030EE  C512  F50B         	movff	fputs@i,?_fputs
  2116  0030F2  C513  F50C         	movff	fputs@i+1,?_fputs+1
  2117  0030F6  0012               	return		;funcret
  2118  0030F8                     __end_of_fputs:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _fputc *****************
  2122 ;; Defined at:
  2123 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  c               2    1[COMRAM] int 
  2126 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2127 ;;		 -> NULL(0), 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  2    1[COMRAM] int 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2141 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2142 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2143 ;;Total ram usage:        9 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    2
  2146 ;; This function calls:
  2147 ;;		_putch
  2148 ;; This function is called by:
  2149 ;;		_pad
  2150 ;;		_vfpfcnvrt
  2151 ;;		_fputs
  2152 ;;		_puts
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text9
  2157  002FEC                     __ptext9:
  2158                           	callstack 0
  2159  002FEC                     _fputc:
  2160                           	callstack 123
  2161  002FEC  5004               	movf	fputc@fp^(0+1280),w,c
  2162  002FEE  1005               	iorwf	(fputc@fp+1)^(0+1280),w,c
  2163  002FF0  B4D8               	btfsc	status,2,c
  2164  002FF2  EFFD  F017         	goto	u561
  2165  002FF6  EFFF  F017         	goto	u560
  2166  002FFA                     u561:
  2167  002FFA  EF08  F018         	goto	l1283
  2168  002FFE                     u560:
  2169  002FFE  5004               	movf	fputc@fp^(0+1280),w,c
  2170  003000  1005               	iorwf	(fputc@fp+1)^(0+1280),w,c
  2171  003002  A4D8               	btfss	status,2,c
  2172  003004  EF06  F018         	goto	u571
  2173  003008  EF08  F018         	goto	u570
  2174  00300C                     u571:
  2175  00300C  EF0D  F018         	goto	l1285
  2176  003010                     u570:
  2177  003010                     l1283:
  2178  003010  5002               	movf	fputc@c^(0+1280),w,c
  2179  003012  EC72  F019         	call	_putch
  2180  003016  EF40  F018         	goto	l1291
  2181  00301A                     l1285:
  2182  00301A  EE20 F004          	lfsr	2,4
  2183  00301E  5004               	movf	fputc@fp^(0+1280),w,c
  2184  003020  26D9               	addwf	fsr2l,f,c
  2185  003022  5005               	movf	(fputc@fp+1)^(0+1280),w,c
  2186  003024  22DA               	addwfc	fsr2h,f,c
  2187  003026  50DE               	movf	postinc2,w,c
  2188  003028  10DE               	iorwf	postinc2,w,c
  2189  00302A  B4D8               	btfsc	status,2,c
  2190  00302C  EF1A  F018         	goto	u581
  2191  003030  EF1C  F018         	goto	u580
  2192  003034                     u581:
  2193  003034  EF37  F018         	goto	l1289
  2194  003038                     u580:
  2195  003038  EE20 F004          	lfsr	2,4
  2196  00303C  5004               	movf	fputc@fp^(0+1280),w,c
  2197  00303E  26D9               	addwf	fsr2l,f,c
  2198  003040  5005               	movf	(fputc@fp+1)^(0+1280),w,c
  2199  003042  22DA               	addwfc	fsr2h,f,c
  2200  003044  EE10 F002          	lfsr	1,2
  2201  003048  5004               	movf	fputc@fp^(0+1280),w,c
  2202  00304A  26E1               	addwf	fsr1l,f,c
  2203  00304C  5005               	movf	(fputc@fp+1)^(0+1280),w,c
  2204  00304E  22E2               	addwfc	fsr1h,f,c
  2205  003050  50DE               	movf	postinc2,w,c
  2206  003052  5CE6               	subwf	postinc1,w,c
  2207  003054  50E6               	movf	postinc1,w,c
  2208  003056  0A80               	xorlw	128
  2209  003058  6E0A               	movwf	(??_fputc+4)^(0+1280),c
  2210  00305A  50DE               	movf	postinc2,w,c
  2211  00305C  0A80               	xorlw	128
  2212  00305E  580A               	subwfb	(??_fputc+4)^(0+1280),w,c
  2213  003060  B0D8               	btfsc	status,0,c
  2214  003062  EF35  F018         	goto	u591
  2215  003066  EF37  F018         	goto	u590
  2216  00306A                     u591:
  2217  00306A  EF40  F018         	goto	l1291
  2218  00306E                     u590:
  2219  00306E                     l1289:
  2220  00306E  EE20 F002          	lfsr	2,2
  2221  003072  5004               	movf	fputc@fp^(0+1280),w,c
  2222  003074  26D9               	addwf	fsr2l,f,c
  2223  003076  5005               	movf	(fputc@fp+1)^(0+1280),w,c
  2224  003078  22DA               	addwfc	fsr2h,f,c
  2225  00307A  2ADE               	incf	postinc2,f,c
  2226  00307C  0E00               	movlw	0
  2227  00307E  22DD               	addwfc	postdec2,f,c
  2228  003080                     l1291:
  2229  003080  C502  F502         	movff	fputc@c,?_fputc
  2230  003084  6A03               	clrf	(?_fputc+1)^(0+1280),c
  2231  003086  0012               	return		;funcret
  2232  003088                     __end_of_fputc:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _putch *****************
  2236 ;; Defined at:
  2237 ;;		line 36 in file "uart.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  data            1    wreg     unsigned char 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  data            1    0[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2255 ;;Total ram usage:        1 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_fputc
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text10
  2266  0032E4                     __ptext10:
  2267                           	callstack 0
  2268  0032E4                     _putch:
  2269                           	callstack 123
  2270                           
  2271                           ;incstack = 0
  2272                           ;putch@data stored from wreg
  2273  0032E4  6E01               	movwf	putch@data^(0+1280),c
  2274  0032E6                     l125:
  2275  0032E6  0102               	movlb	2	; () banked
  2276  0032E8  B9B0               	btfsc	176,4,b	;volatile
  2277  0032EA  EF79  F019         	goto	u551
  2278  0032EE  EF7B  F019         	goto	u550
  2279  0032F2                     u551:
  2280  0032F2  EF73  F019         	goto	l125
  2281  0032F6                     u550:
  2282  0032F6                     
  2283                           ; BSR set to: 2
  2284                           ;uart.c: 41:     U1TXB = data;
  2285  0032F6  0061  F404  F2A3   	movff	putch@data,675	;volatile
  2286  0032FC                     
  2287                           ; BSR set to: 2
  2288  0032FC  0012               	return		;funcret
  2289  0032FE                     __end_of_putch:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _abs *****************
  2293 ;; Defined at:
  2294 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  a               2   18[COMRAM] int 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  2   18[COMRAM] int 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2311 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2312 ;;Total ram usage:        4 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    1
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_dtoa
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text11
  2323  0031AC                     __ptext11:
  2324                           	callstack 0
  2325  0031AC                     _abs:
  2326                           	callstack 122
  2327  0031AC  BE14               	btfsc	(abs@a+1)^(0+1280),7,c
  2328  0031AE  EFE3  F018         	goto	u800
  2329  0031B2  5014               	movf	(abs@a+1)^(0+1280),w,c
  2330  0031B4  E106               	bnz	u801
  2331  0031B6  0413               	decf	abs@a^(0+1280),w,c
  2332  0031B8  B0D8               	btfsc	status,0,c
  2333  0031BA  EFE1  F018         	goto	u801
  2334  0031BE  EFE3  F018         	goto	u800
  2335  0031C2                     u801:
  2336  0031C2  EFF1  F018         	goto	l885
  2337  0031C6                     u800:
  2338  0031C6  C513  F515         	movff	abs@a,??_abs
  2339  0031CA  C514  F516         	movff	abs@a+1,??_abs+1
  2340  0031CE  1E15               	comf	??_abs^(0+1280),f,c
  2341  0031D0  1E16               	comf	(??_abs+1)^(0+1280),f,c
  2342  0031D2  4A15               	infsnz	??_abs^(0+1280),f,c
  2343  0031D4  2A16               	incf	(??_abs+1)^(0+1280),f,c
  2344  0031D6  C515  F513         	movff	??_abs,?_abs
  2345  0031DA  C516  F514         	movff	??_abs+1,?_abs+1
  2346  0031DE  EFF5  F018         	goto	l888
  2347  0031E2                     l885:
  2348  0031E2  C513  F513         	movff	abs@a,?_abs
  2349  0031E6  C514  F514         	movff	abs@a+1,?_abs+1
  2350  0031EA                     l888:
  2351  0031EA  0012               	return		;funcret
  2352  0031EC                     __end_of_abs:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function ___aomod *****************
  2356 ;; Defined at:
  2357 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  dividend        8    0[COMRAM] long long 
  2360 ;;  divisor         8    8[COMRAM] long long 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  sign            1   17[COMRAM] unsigned char 
  2363 ;;  counter         1   16[COMRAM] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  8    0[COMRAM] long long 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2373 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2376 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2377 ;;Total ram usage:       18 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    1
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_dtoa
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text12
  2388  002DC2                     __ptext12:
  2389                           	callstack 0
  2390  002DC2                     ___aomod:
  2391                           	callstack 122
  2392  002DC2  0E00               	movlw	0
  2393  002DC4  6E12               	movwf	___aomod@sign^(0+1280),c
  2394  002DC6  BE08               	btfsc	(___aomod@dividend+7)^(0+1280),7,c
  2395  002DC8  EFEA  F016         	goto	u700
  2396  002DCC  EFE8  F016         	goto	u701
  2397  002DD0                     u701:
  2398  002DD0  EFFC  F016         	goto	l1365
  2399  002DD4                     u700:
  2400  002DD4  1E08               	comf	(___aomod@dividend+7)^(0+1280),f,c
  2401  002DD6  1E07               	comf	(___aomod@dividend+6)^(0+1280),f,c
  2402  002DD8  1E06               	comf	(___aomod@dividend+5)^(0+1280),f,c
  2403  002DDA  1E05               	comf	(___aomod@dividend+4)^(0+1280),f,c
  2404  002DDC  1E04               	comf	(___aomod@dividend+3)^(0+1280),f,c
  2405  002DDE  1E03               	comf	(___aomod@dividend+2)^(0+1280),f,c
  2406  002DE0  1E02               	comf	(___aomod@dividend+1)^(0+1280),f,c
  2407  002DE2  6C01               	negf	___aomod@dividend^(0+1280),c
  2408  002DE4  0E00               	movlw	0
  2409  002DE6  2202               	addwfc	(___aomod@dividend+1)^(0+1280),f,c
  2410  002DE8  2203               	addwfc	(___aomod@dividend+2)^(0+1280),f,c
  2411  002DEA  2204               	addwfc	(___aomod@dividend+3)^(0+1280),f,c
  2412  002DEC  2205               	addwfc	(___aomod@dividend+4)^(0+1280),f,c
  2413  002DEE  2206               	addwfc	(___aomod@dividend+5)^(0+1280),f,c
  2414  002DF0  2207               	addwfc	(___aomod@dividend+6)^(0+1280),f,c
  2415  002DF2  2208               	addwfc	(___aomod@dividend+7)^(0+1280),f,c
  2416  002DF4  0E01               	movlw	1
  2417  002DF6  6E12               	movwf	___aomod@sign^(0+1280),c
  2418  002DF8                     l1365:
  2419  002DF8  BE10               	btfsc	(___aomod@divisor+7)^(0+1280),7,c
  2420  002DFA  EF03  F017         	goto	u710
  2421  002DFE  EF01  F017         	goto	u711
  2422  002E02                     u711:
  2423  002E02  EF13  F017         	goto	l1369
  2424  002E06                     u710:
  2425  002E06  1E10               	comf	(___aomod@divisor+7)^(0+1280),f,c
  2426  002E08  1E0F               	comf	(___aomod@divisor+6)^(0+1280),f,c
  2427  002E0A  1E0E               	comf	(___aomod@divisor+5)^(0+1280),f,c
  2428  002E0C  1E0D               	comf	(___aomod@divisor+4)^(0+1280),f,c
  2429  002E0E  1E0C               	comf	(___aomod@divisor+3)^(0+1280),f,c
  2430  002E10  1E0B               	comf	(___aomod@divisor+2)^(0+1280),f,c
  2431  002E12  1E0A               	comf	(___aomod@divisor+1)^(0+1280),f,c
  2432  002E14  6C09               	negf	___aomod@divisor^(0+1280),c
  2433  002E16  0E00               	movlw	0
  2434  002E18  220A               	addwfc	(___aomod@divisor+1)^(0+1280),f,c
  2435  002E1A  220B               	addwfc	(___aomod@divisor+2)^(0+1280),f,c
  2436  002E1C  220C               	addwfc	(___aomod@divisor+3)^(0+1280),f,c
  2437  002E1E  220D               	addwfc	(___aomod@divisor+4)^(0+1280),f,c
  2438  002E20  220E               	addwfc	(___aomod@divisor+5)^(0+1280),f,c
  2439  002E22  220F               	addwfc	(___aomod@divisor+6)^(0+1280),f,c
  2440  002E24  2210               	addwfc	(___aomod@divisor+7)^(0+1280),f,c
  2441  002E26                     l1369:
  2442  002E26  5009               	movf	___aomod@divisor^(0+1280),w,c
  2443  002E28  100A               	iorwf	(___aomod@divisor+1)^(0+1280),w,c
  2444  002E2A  100B               	iorwf	(___aomod@divisor+2)^(0+1280),w,c
  2445  002E2C  100C               	iorwf	(___aomod@divisor+3)^(0+1280),w,c
  2446  002E2E  100D               	iorwf	(___aomod@divisor+4)^(0+1280),w,c
  2447  002E30  100E               	iorwf	(___aomod@divisor+5)^(0+1280),w,c
  2448  002E32  100F               	iorwf	(___aomod@divisor+6)^(0+1280),w,c
  2449  002E34  1010               	iorwf	(___aomod@divisor+7)^(0+1280),w,c
  2450  002E36  B4D8               	btfsc	status,2,c
  2451  002E38  EF20  F017         	goto	u721
  2452  002E3C  EF22  F017         	goto	u720
  2453  002E40                     u721:
  2454  002E40  EF6A  F017         	goto	l1385
  2455  002E44                     u720:
  2456  002E44  0E01               	movlw	1
  2457  002E46  6E11               	movwf	___aomod@counter^(0+1280),c
  2458  002E48  EF30  F017         	goto	l1375
  2459  002E4C                     l1373:
  2460  002E4C  90D8               	bcf	status,0,c
  2461  002E4E  3609               	rlcf	___aomod@divisor^(0+1280),f,c
  2462  002E50  360A               	rlcf	(___aomod@divisor+1)^(0+1280),f,c
  2463  002E52  360B               	rlcf	(___aomod@divisor+2)^(0+1280),f,c
  2464  002E54  360C               	rlcf	(___aomod@divisor+3)^(0+1280),f,c
  2465  002E56  360D               	rlcf	(___aomod@divisor+4)^(0+1280),f,c
  2466  002E58  360E               	rlcf	(___aomod@divisor+5)^(0+1280),f,c
  2467  002E5A  360F               	rlcf	(___aomod@divisor+6)^(0+1280),f,c
  2468  002E5C  3610               	rlcf	(___aomod@divisor+7)^(0+1280),f,c
  2469  002E5E  2A11               	incf	___aomod@counter^(0+1280),f,c
  2470  002E60                     l1375:
  2471  002E60  AE10               	btfss	(___aomod@divisor+7)^(0+1280),7,c
  2472  002E62  EF35  F017         	goto	u731
  2473  002E66  EF37  F017         	goto	u730
  2474  002E6A                     u731:
  2475  002E6A  EF26  F017         	goto	l1373
  2476  002E6E                     u730:
  2477  002E6E                     l1377:
  2478  002E6E  5009               	movf	___aomod@divisor^(0+1280),w,c
  2479  002E70  5C01               	subwf	___aomod@dividend^(0+1280),w,c
  2480  002E72  500A               	movf	(___aomod@divisor+1)^(0+1280),w,c
  2481  002E74  5802               	subwfb	(___aomod@dividend+1)^(0+1280),w,c
  2482  002E76  500B               	movf	(___aomod@divisor+2)^(0+1280),w,c
  2483  002E78  5803               	subwfb	(___aomod@dividend+2)^(0+1280),w,c
  2484  002E7A  500C               	movf	(___aomod@divisor+3)^(0+1280),w,c
  2485  002E7C  5804               	subwfb	(___aomod@dividend+3)^(0+1280),w,c
  2486  002E7E  500D               	movf	(___aomod@divisor+4)^(0+1280),w,c
  2487  002E80  5805               	subwfb	(___aomod@dividend+4)^(0+1280),w,c
  2488  002E82  500E               	movf	(___aomod@divisor+5)^(0+1280),w,c
  2489  002E84  5806               	subwfb	(___aomod@dividend+5)^(0+1280),w,c
  2490  002E86  500F               	movf	(___aomod@divisor+6)^(0+1280),w,c
  2491  002E88  5807               	subwfb	(___aomod@dividend+6)^(0+1280),w,c
  2492  002E8A  5010               	movf	(___aomod@divisor+7)^(0+1280),w,c
  2493  002E8C  5808               	subwfb	(___aomod@dividend+7)^(0+1280),w,c
  2494  002E8E  A0D8               	btfss	status,0,c
  2495  002E90  EF4C  F017         	goto	u741
  2496  002E94  EF4E  F017         	goto	u740
  2497  002E98                     u741:
  2498  002E98  EF5E  F017         	goto	l1381
  2499  002E9C                     u740:
  2500  002E9C  5009               	movf	___aomod@divisor^(0+1280),w,c
  2501  002E9E  5E01               	subwf	___aomod@dividend^(0+1280),f,c
  2502  002EA0  500A               	movf	(___aomod@divisor+1)^(0+1280),w,c
  2503  002EA2  5A02               	subwfb	(___aomod@dividend+1)^(0+1280),f,c
  2504  002EA4  500B               	movf	(___aomod@divisor+2)^(0+1280),w,c
  2505  002EA6  5A03               	subwfb	(___aomod@dividend+2)^(0+1280),f,c
  2506  002EA8  500C               	movf	(___aomod@divisor+3)^(0+1280),w,c
  2507  002EAA  5A04               	subwfb	(___aomod@dividend+3)^(0+1280),f,c
  2508  002EAC  500D               	movf	(___aomod@divisor+4)^(0+1280),w,c
  2509  002EAE  5A05               	subwfb	(___aomod@dividend+4)^(0+1280),f,c
  2510  002EB0  500E               	movf	(___aomod@divisor+5)^(0+1280),w,c
  2511  002EB2  5A06               	subwfb	(___aomod@dividend+5)^(0+1280),f,c
  2512  002EB4  500F               	movf	(___aomod@divisor+6)^(0+1280),w,c
  2513  002EB6  5A07               	subwfb	(___aomod@dividend+6)^(0+1280),f,c
  2514  002EB8  5010               	movf	(___aomod@divisor+7)^(0+1280),w,c
  2515  002EBA  5A08               	subwfb	(___aomod@dividend+7)^(0+1280),f,c
  2516  002EBC                     l1381:
  2517  002EBC  90D8               	bcf	status,0,c
  2518  002EBE  3210               	rrcf	(___aomod@divisor+7)^(0+1280),f,c
  2519  002EC0  320F               	rrcf	(___aomod@divisor+6)^(0+1280),f,c
  2520  002EC2  320E               	rrcf	(___aomod@divisor+5)^(0+1280),f,c
  2521  002EC4  320D               	rrcf	(___aomod@divisor+4)^(0+1280),f,c
  2522  002EC6  320C               	rrcf	(___aomod@divisor+3)^(0+1280),f,c
  2523  002EC8  320B               	rrcf	(___aomod@divisor+2)^(0+1280),f,c
  2524  002ECA  320A               	rrcf	(___aomod@divisor+1)^(0+1280),f,c
  2525  002ECC  3209               	rrcf	___aomod@divisor^(0+1280),f,c
  2526  002ECE  2E11               	decfsz	___aomod@counter^(0+1280),f,c
  2527  002ED0  EF37  F017         	goto	l1377
  2528  002ED4                     l1385:
  2529  002ED4  5012               	movf	___aomod@sign^(0+1280),w,c
  2530  002ED6  B4D8               	btfsc	status,2,c
  2531  002ED8  EF70  F017         	goto	u751
  2532  002EDC  EF72  F017         	goto	u750
  2533  002EE0                     u751:
  2534  002EE0  EF82  F017         	goto	l1389
  2535  002EE4                     u750:
  2536  002EE4  1E08               	comf	(___aomod@dividend+7)^(0+1280),f,c
  2537  002EE6  1E07               	comf	(___aomod@dividend+6)^(0+1280),f,c
  2538  002EE8  1E06               	comf	(___aomod@dividend+5)^(0+1280),f,c
  2539  002EEA  1E05               	comf	(___aomod@dividend+4)^(0+1280),f,c
  2540  002EEC  1E04               	comf	(___aomod@dividend+3)^(0+1280),f,c
  2541  002EEE  1E03               	comf	(___aomod@dividend+2)^(0+1280),f,c
  2542  002EF0  1E02               	comf	(___aomod@dividend+1)^(0+1280),f,c
  2543  002EF2  6C01               	negf	___aomod@dividend^(0+1280),c
  2544  002EF4  0E00               	movlw	0
  2545  002EF6  2202               	addwfc	(___aomod@dividend+1)^(0+1280),f,c
  2546  002EF8  2203               	addwfc	(___aomod@dividend+2)^(0+1280),f,c
  2547  002EFA  2204               	addwfc	(___aomod@dividend+3)^(0+1280),f,c
  2548  002EFC  2205               	addwfc	(___aomod@dividend+4)^(0+1280),f,c
  2549  002EFE  2206               	addwfc	(___aomod@dividend+5)^(0+1280),f,c
  2550  002F00  2207               	addwfc	(___aomod@dividend+6)^(0+1280),f,c
  2551  002F02  2208               	addwfc	(___aomod@dividend+7)^(0+1280),f,c
  2552  002F04                     l1389:
  2553  002F04  C501  F501         	movff	___aomod@dividend,?___aomod
  2554  002F08  C502  F502         	movff	___aomod@dividend+1,?___aomod+1
  2555  002F0C  C503  F503         	movff	___aomod@dividend+2,?___aomod+2
  2556  002F10  C504  F504         	movff	___aomod@dividend+3,?___aomod+3
  2557  002F14  C505  F505         	movff	___aomod@dividend+4,?___aomod+4
  2558  002F18  C506  F506         	movff	___aomod@dividend+5,?___aomod+5
  2559  002F1C  C507  F507         	movff	___aomod@dividend+6,?___aomod+6
  2560  002F20  C508  F508         	movff	___aomod@dividend+7,?___aomod+7
  2561  002F24  0012               	return		;funcret
  2562  002F26                     __end_of___aomod:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function ___aodiv *****************
  2566 ;; Defined at:
  2567 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  dividend        8    0[COMRAM] long long 
  2570 ;;  divisor         8    8[COMRAM] long long 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  quotient        8   18[COMRAM] long long 
  2573 ;;  sign            1   17[COMRAM] unsigned char 
  2574 ;;  counter         1   16[COMRAM] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  8    0[COMRAM] long long 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2584 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2585 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2587 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2588 ;;Total ram usage:       26 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    1
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_dtoa
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text13
  2599  002C3A                     __ptext13:
  2600                           	callstack 0
  2601  002C3A                     ___aodiv:
  2602                           	callstack 122
  2603  002C3A  0E00               	movlw	0
  2604  002C3C  6E12               	movwf	___aodiv@sign^(0+1280),c
  2605  002C3E  BE10               	btfsc	(___aodiv@divisor+7)^(0+1280),7,c
  2606  002C40  EF26  F016         	goto	u630
  2607  002C44  EF24  F016         	goto	u631
  2608  002C48                     u631:
  2609  002C48  EF38  F016         	goto	l1321
  2610  002C4C                     u630:
  2611  002C4C  1E10               	comf	(___aodiv@divisor+7)^(0+1280),f,c
  2612  002C4E  1E0F               	comf	(___aodiv@divisor+6)^(0+1280),f,c
  2613  002C50  1E0E               	comf	(___aodiv@divisor+5)^(0+1280),f,c
  2614  002C52  1E0D               	comf	(___aodiv@divisor+4)^(0+1280),f,c
  2615  002C54  1E0C               	comf	(___aodiv@divisor+3)^(0+1280),f,c
  2616  002C56  1E0B               	comf	(___aodiv@divisor+2)^(0+1280),f,c
  2617  002C58  1E0A               	comf	(___aodiv@divisor+1)^(0+1280),f,c
  2618  002C5A  6C09               	negf	___aodiv@divisor^(0+1280),c
  2619  002C5C  0E00               	movlw	0
  2620  002C5E  220A               	addwfc	(___aodiv@divisor+1)^(0+1280),f,c
  2621  002C60  220B               	addwfc	(___aodiv@divisor+2)^(0+1280),f,c
  2622  002C62  220C               	addwfc	(___aodiv@divisor+3)^(0+1280),f,c
  2623  002C64  220D               	addwfc	(___aodiv@divisor+4)^(0+1280),f,c
  2624  002C66  220E               	addwfc	(___aodiv@divisor+5)^(0+1280),f,c
  2625  002C68  220F               	addwfc	(___aodiv@divisor+6)^(0+1280),f,c
  2626  002C6A  2210               	addwfc	(___aodiv@divisor+7)^(0+1280),f,c
  2627  002C6C  0E01               	movlw	1
  2628  002C6E  6E12               	movwf	___aodiv@sign^(0+1280),c
  2629  002C70                     l1321:
  2630  002C70  BE08               	btfsc	(___aodiv@dividend+7)^(0+1280),7,c
  2631  002C72  EF3F  F016         	goto	u640
  2632  002C76  EF3D  F016         	goto	u641
  2633  002C7A                     u641:
  2634  002C7A  EF51  F016         	goto	l1327
  2635  002C7E                     u640:
  2636  002C7E  1E08               	comf	(___aodiv@dividend+7)^(0+1280),f,c
  2637  002C80  1E07               	comf	(___aodiv@dividend+6)^(0+1280),f,c
  2638  002C82  1E06               	comf	(___aodiv@dividend+5)^(0+1280),f,c
  2639  002C84  1E05               	comf	(___aodiv@dividend+4)^(0+1280),f,c
  2640  002C86  1E04               	comf	(___aodiv@dividend+3)^(0+1280),f,c
  2641  002C88  1E03               	comf	(___aodiv@dividend+2)^(0+1280),f,c
  2642  002C8A  1E02               	comf	(___aodiv@dividend+1)^(0+1280),f,c
  2643  002C8C  6C01               	negf	___aodiv@dividend^(0+1280),c
  2644  002C8E  0E00               	movlw	0
  2645  002C90  2202               	addwfc	(___aodiv@dividend+1)^(0+1280),f,c
  2646  002C92  2203               	addwfc	(___aodiv@dividend+2)^(0+1280),f,c
  2647  002C94  2204               	addwfc	(___aodiv@dividend+3)^(0+1280),f,c
  2648  002C96  2205               	addwfc	(___aodiv@dividend+4)^(0+1280),f,c
  2649  002C98  2206               	addwfc	(___aodiv@dividend+5)^(0+1280),f,c
  2650  002C9A  2207               	addwfc	(___aodiv@dividend+6)^(0+1280),f,c
  2651  002C9C  2208               	addwfc	(___aodiv@dividend+7)^(0+1280),f,c
  2652  002C9E  0E01               	movlw	1
  2653  002CA0  1A12               	xorwf	___aodiv@sign^(0+1280),f,c
  2654  002CA2                     l1327:
  2655  002CA2  EE21  F113         	lfsr	2,___aodiv@quotient
  2656  002CA6  0E07               	movlw	7
  2657  002CA8                     u651:
  2658  002CA8  6ADE               	clrf	postinc2,c
  2659  002CAA  06E8               	decf	wreg,f,c
  2660  002CAC  E2FD               	bc	u651
  2661  002CAE  5009               	movf	___aodiv@divisor^(0+1280),w,c
  2662  002CB0  100A               	iorwf	(___aodiv@divisor+1)^(0+1280),w,c
  2663  002CB2  100B               	iorwf	(___aodiv@divisor+2)^(0+1280),w,c
  2664  002CB4  100C               	iorwf	(___aodiv@divisor+3)^(0+1280),w,c
  2665  002CB6  100D               	iorwf	(___aodiv@divisor+4)^(0+1280),w,c
  2666  002CB8  100E               	iorwf	(___aodiv@divisor+5)^(0+1280),w,c
  2667  002CBA  100F               	iorwf	(___aodiv@divisor+6)^(0+1280),w,c
  2668  002CBC  1010               	iorwf	(___aodiv@divisor+7)^(0+1280),w,c
  2669  002CBE  B4D8               	btfsc	status,2,c
  2670  002CC0  EF64  F016         	goto	u661
  2671  002CC4  EF66  F016         	goto	u660
  2672  002CC8                     u661:
  2673  002CC8  EFB8  F016         	goto	l1349
  2674  002CCC                     u660:
  2675  002CCC  0E01               	movlw	1
  2676  002CCE  6E11               	movwf	___aodiv@counter^(0+1280),c
  2677  002CD0  EF74  F016         	goto	l1335
  2678  002CD4                     l1333:
  2679  002CD4  90D8               	bcf	status,0,c
  2680  002CD6  3609               	rlcf	___aodiv@divisor^(0+1280),f,c
  2681  002CD8  360A               	rlcf	(___aodiv@divisor+1)^(0+1280),f,c
  2682  002CDA  360B               	rlcf	(___aodiv@divisor+2)^(0+1280),f,c
  2683  002CDC  360C               	rlcf	(___aodiv@divisor+3)^(0+1280),f,c
  2684  002CDE  360D               	rlcf	(___aodiv@divisor+4)^(0+1280),f,c
  2685  002CE0  360E               	rlcf	(___aodiv@divisor+5)^(0+1280),f,c
  2686  002CE2  360F               	rlcf	(___aodiv@divisor+6)^(0+1280),f,c
  2687  002CE4  3610               	rlcf	(___aodiv@divisor+7)^(0+1280),f,c
  2688  002CE6  2A11               	incf	___aodiv@counter^(0+1280),f,c
  2689  002CE8                     l1335:
  2690  002CE8  AE10               	btfss	(___aodiv@divisor+7)^(0+1280),7,c
  2691  002CEA  EF79  F016         	goto	u671
  2692  002CEE  EF7B  F016         	goto	u670
  2693  002CF2                     u671:
  2694  002CF2  EF6A  F016         	goto	l1333
  2695  002CF6                     u670:
  2696  002CF6                     l1337:
  2697  002CF6  90D8               	bcf	status,0,c
  2698  002CF8  3613               	rlcf	___aodiv@quotient^(0+1280),f,c
  2699  002CFA  3614               	rlcf	(___aodiv@quotient+1)^(0+1280),f,c
  2700  002CFC  3615               	rlcf	(___aodiv@quotient+2)^(0+1280),f,c
  2701  002CFE  3616               	rlcf	(___aodiv@quotient+3)^(0+1280),f,c
  2702  002D00  3617               	rlcf	(___aodiv@quotient+4)^(0+1280),f,c
  2703  002D02  3618               	rlcf	(___aodiv@quotient+5)^(0+1280),f,c
  2704  002D04  3619               	rlcf	(___aodiv@quotient+6)^(0+1280),f,c
  2705  002D06  361A               	rlcf	(___aodiv@quotient+7)^(0+1280),f,c
  2706  002D08  5009               	movf	___aodiv@divisor^(0+1280),w,c
  2707  002D0A  5C01               	subwf	___aodiv@dividend^(0+1280),w,c
  2708  002D0C  500A               	movf	(___aodiv@divisor+1)^(0+1280),w,c
  2709  002D0E  5802               	subwfb	(___aodiv@dividend+1)^(0+1280),w,c
  2710  002D10  500B               	movf	(___aodiv@divisor+2)^(0+1280),w,c
  2711  002D12  5803               	subwfb	(___aodiv@dividend+2)^(0+1280),w,c
  2712  002D14  500C               	movf	(___aodiv@divisor+3)^(0+1280),w,c
  2713  002D16  5804               	subwfb	(___aodiv@dividend+3)^(0+1280),w,c
  2714  002D18  500D               	movf	(___aodiv@divisor+4)^(0+1280),w,c
  2715  002D1A  5805               	subwfb	(___aodiv@dividend+4)^(0+1280),w,c
  2716  002D1C  500E               	movf	(___aodiv@divisor+5)^(0+1280),w,c
  2717  002D1E  5806               	subwfb	(___aodiv@dividend+5)^(0+1280),w,c
  2718  002D20  500F               	movf	(___aodiv@divisor+6)^(0+1280),w,c
  2719  002D22  5807               	subwfb	(___aodiv@dividend+6)^(0+1280),w,c
  2720  002D24  5010               	movf	(___aodiv@divisor+7)^(0+1280),w,c
  2721  002D26  5808               	subwfb	(___aodiv@dividend+7)^(0+1280),w,c
  2722  002D28  A0D8               	btfss	status,0,c
  2723  002D2A  EF99  F016         	goto	u681
  2724  002D2E  EF9B  F016         	goto	u680
  2725  002D32                     u681:
  2726  002D32  EFAC  F016         	goto	l1345
  2727  002D36                     u680:
  2728  002D36  5009               	movf	___aodiv@divisor^(0+1280),w,c
  2729  002D38  5E01               	subwf	___aodiv@dividend^(0+1280),f,c
  2730  002D3A  500A               	movf	(___aodiv@divisor+1)^(0+1280),w,c
  2731  002D3C  5A02               	subwfb	(___aodiv@dividend+1)^(0+1280),f,c
  2732  002D3E  500B               	movf	(___aodiv@divisor+2)^(0+1280),w,c
  2733  002D40  5A03               	subwfb	(___aodiv@dividend+2)^(0+1280),f,c
  2734  002D42  500C               	movf	(___aodiv@divisor+3)^(0+1280),w,c
  2735  002D44  5A04               	subwfb	(___aodiv@dividend+3)^(0+1280),f,c
  2736  002D46  500D               	movf	(___aodiv@divisor+4)^(0+1280),w,c
  2737  002D48  5A05               	subwfb	(___aodiv@dividend+4)^(0+1280),f,c
  2738  002D4A  500E               	movf	(___aodiv@divisor+5)^(0+1280),w,c
  2739  002D4C  5A06               	subwfb	(___aodiv@dividend+5)^(0+1280),f,c
  2740  002D4E  500F               	movf	(___aodiv@divisor+6)^(0+1280),w,c
  2741  002D50  5A07               	subwfb	(___aodiv@dividend+6)^(0+1280),f,c
  2742  002D52  5010               	movf	(___aodiv@divisor+7)^(0+1280),w,c
  2743  002D54  5A08               	subwfb	(___aodiv@dividend+7)^(0+1280),f,c
  2744  002D56  8013               	bsf	___aodiv@quotient^(0+1280),0,c
  2745  002D58                     l1345:
  2746  002D58  90D8               	bcf	status,0,c
  2747  002D5A  3210               	rrcf	(___aodiv@divisor+7)^(0+1280),f,c
  2748  002D5C  320F               	rrcf	(___aodiv@divisor+6)^(0+1280),f,c
  2749  002D5E  320E               	rrcf	(___aodiv@divisor+5)^(0+1280),f,c
  2750  002D60  320D               	rrcf	(___aodiv@divisor+4)^(0+1280),f,c
  2751  002D62  320C               	rrcf	(___aodiv@divisor+3)^(0+1280),f,c
  2752  002D64  320B               	rrcf	(___aodiv@divisor+2)^(0+1280),f,c
  2753  002D66  320A               	rrcf	(___aodiv@divisor+1)^(0+1280),f,c
  2754  002D68  3209               	rrcf	___aodiv@divisor^(0+1280),f,c
  2755  002D6A  2E11               	decfsz	___aodiv@counter^(0+1280),f,c
  2756  002D6C  EF7B  F016         	goto	l1337
  2757  002D70                     l1349:
  2758  002D70  5012               	movf	___aodiv@sign^(0+1280),w,c
  2759  002D72  B4D8               	btfsc	status,2,c
  2760  002D74  EFBE  F016         	goto	u691
  2761  002D78  EFC0  F016         	goto	u690
  2762  002D7C                     u691:
  2763  002D7C  EFD0  F016         	goto	l1353
  2764  002D80                     u690:
  2765  002D80  1E1A               	comf	(___aodiv@quotient+7)^(0+1280),f,c
  2766  002D82  1E19               	comf	(___aodiv@quotient+6)^(0+1280),f,c
  2767  002D84  1E18               	comf	(___aodiv@quotient+5)^(0+1280),f,c
  2768  002D86  1E17               	comf	(___aodiv@quotient+4)^(0+1280),f,c
  2769  002D88  1E16               	comf	(___aodiv@quotient+3)^(0+1280),f,c
  2770  002D8A  1E15               	comf	(___aodiv@quotient+2)^(0+1280),f,c
  2771  002D8C  1E14               	comf	(___aodiv@quotient+1)^(0+1280),f,c
  2772  002D8E  6C13               	negf	___aodiv@quotient^(0+1280),c
  2773  002D90  0E00               	movlw	0
  2774  002D92  2214               	addwfc	(___aodiv@quotient+1)^(0+1280),f,c
  2775  002D94  2215               	addwfc	(___aodiv@quotient+2)^(0+1280),f,c
  2776  002D96  2216               	addwfc	(___aodiv@quotient+3)^(0+1280),f,c
  2777  002D98  2217               	addwfc	(___aodiv@quotient+4)^(0+1280),f,c
  2778  002D9A  2218               	addwfc	(___aodiv@quotient+5)^(0+1280),f,c
  2779  002D9C  2219               	addwfc	(___aodiv@quotient+6)^(0+1280),f,c
  2780  002D9E  221A               	addwfc	(___aodiv@quotient+7)^(0+1280),f,c
  2781  002DA0                     l1353:
  2782  002DA0  C513  F501         	movff	___aodiv@quotient,?___aodiv
  2783  002DA4  C514  F502         	movff	___aodiv@quotient+1,?___aodiv+1
  2784  002DA8  C515  F503         	movff	___aodiv@quotient+2,?___aodiv+2
  2785  002DAC  C516  F504         	movff	___aodiv@quotient+3,?___aodiv+3
  2786  002DB0  C517  F505         	movff	___aodiv@quotient+4,?___aodiv+4
  2787  002DB4  C518  F506         	movff	___aodiv@quotient+5,?___aodiv+5
  2788  002DB8  C519  F507         	movff	___aodiv@quotient+6,?___aodiv+6
  2789  002DBC  C51A  F508         	movff	___aodiv@quotient+7,?___aodiv+7
  2790  002DC0  0012               	return		;funcret
  2791  002DC2                     __end_of___aodiv:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _DEBUG_UART_INIT *****************
  2795 ;; Defined at:
  2796 ;;		line 3 in file "uart.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text14
  2825  003262                     __ptext14:
  2826                           	callstack 0
  2827  003262                     _DEBUG_UART_INIT:
  2828                           	callstack 126
  2829  003262                     
  2830                           ;uart.c: 7:     ANSELFbits.ANSELF0 = 0;
  2831  003262  0104               	movlb	4	; () banked
  2832  003264  9128               	bcf	40,0,b	;volatile
  2833                           
  2834                           ;uart.c: 8:     TRISFbits.TRISF0 = 0;
  2835  003266  90CB               	bcf	203,0,c	;volatile
  2836  003268                     
  2837                           ; BSR set to: 4
  2838                           ;uart.c: 10:     RF0PPS = 0x20;
  2839  003268  0E20               	movlw	32
  2840  00326A  0102               	movlb	2	; () banked
  2841  00326C  6F29               	movwf	41,b	;volatile
  2842  00326E                     
  2843                           ; BSR set to: 2
  2844                           ;uart.c: 14:     ANSELFbits.ANSELF1 = 0;
  2845  00326E  0104               	movlb	4	; () banked
  2846  003270  9328               	bcf	40,1,b	;volatile
  2847  003272                     
  2848                           ; BSR set to: 4
  2849                           ;uart.c: 15:     TRISFbits.TRISF1 = 1;
  2850  003272  82CB               	bsf	203,1,c	;volatile
  2851                           
  2852                           ;uart.c: 17:     U1RXPPS = 0b00101001;
  2853  003274  0E29               	movlw	41
  2854  003276  0102               	movlb	2	; () banked
  2855  003278  6F72               	movwf	114,b	;volatile
  2856                           
  2857                           ;uart.c: 20:     U1BRGH = 0; U1BRGL = 139;
  2858  00327A  0E00               	movlw	0
  2859  00327C  6FAF               	movwf	175,b	;volatile
  2860  00327E  0E8B               	movlw	139
  2861  003280  6FAE               	movwf	174,b	;volatile
  2862                           
  2863                           ;uart.c: 23:     U1CON0 = 0;
  2864  003282  0E00               	movlw	0
  2865  003284  6FAB               	movwf	171,b	;volatile
  2866  003286                     
  2867                           ; BSR set to: 2
  2868                           ;uart.c: 24:     U1CON0bits.BRGS = 1;
  2869  003286  8FAB               	bsf	171,7,b	;volatile
  2870  003288                     
  2871                           ; BSR set to: 2
  2872                           ;uart.c: 25:     U1CON0bits.TXEN = 1;
  2873  003288  8BAB               	bsf	171,5,b	;volatile
  2874  00328A                     
  2875                           ; BSR set to: 2
  2876                           ;uart.c: 26:     U1CON0bits.RXEN = 1;
  2877  00328A  89AB               	bsf	171,4,b	;volatile
  2878                           
  2879                           ;uart.c: 27:     U1CON2 = 0;
  2880  00328C  0E00               	movlw	0
  2881  00328E  6FAD               	movwf	173,b	;volatile
  2882                           
  2883                           ;uart.c: 28:     U1CON1 = 0;
  2884  003290  0E00               	movlw	0
  2885  003292  6FAC               	movwf	172,b	;volatile
  2886  003294                     
  2887                           ; BSR set to: 2
  2888                           ;uart.c: 31:     U1CON1bits.ON = 1;
  2889  003294  8FAC               	bsf	172,7,b	;volatile
  2890  003296                     
  2891                           ; BSR set to: 2
  2892  003296  0012               	return		;funcret
  2893  003298                     __end_of_DEBUG_UART_INIT:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _ADC_INIT *****************
  2897 ;; Defined at:
  2898 ;;		line 3 in file "adc.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    1
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text15
  2927  0031EC                     __ptext15:
  2928                           	callstack 0
  2929  0031EC                     _ADC_INIT:
  2930                           	callstack 126
  2931  0031EC                     
  2932                           ;adc.c: 6:     ANSELAbits.ANSELA0 = 1;
  2933  0031EC  0104               	movlb	4	; () banked
  2934  0031EE  8100               	bsf	0,0,b	;volatile
  2935                           
  2936                           ;adc.c: 7:     TRISAbits.TRISA0 = 1;
  2937  0031F0  80C6               	bsf	198,0,c	;volatile
  2938                           
  2939                           ;adc.c: 8:     ANSELAbits.ANSELA1 = 1;
  2940  0031F2  8300               	bsf	0,1,b	;volatile
  2941                           
  2942                           ;adc.c: 9:     TRISAbits.TRISA1 = 1;
  2943  0031F4  82C6               	bsf	198,1,c	;volatile
  2944                           
  2945                           ;adc.c: 12:     ADCON0bits.CS = 1;
  2946  0031F6  0103               	movlb	3	; () banked
  2947  0031F8  89F3               	bsf	243,4,b	;volatile
  2948  0031FA                     
  2949                           ; BSR set to: 3
  2950                           ;adc.c: 15:     ADCON0bits.FM = 1;
  2951  0031FA  51F3               	movf	243,w,b	;volatile
  2952  0031FC  0BF3               	andlw	-13
  2953  0031FE  0904               	iorlw	4
  2954  003200  6FF3               	movwf	243,b	;volatile
  2955                           
  2956                           ;adc.c: 19:     ADREFbits.PREF = 0;
  2957  003202  0EF0               	movlw	-16
  2958  003204  17F8               	andwf	248,f,b	;volatile
  2959                           
  2960                           ;adc.c: 21:     ADREFbits.NREF = 0;
  2961  003206  0E0F               	movlw	-241
  2962  003208  17F8               	andwf	248,f,b	;volatile
  2963                           
  2964                           ;adc.c: 26:     ADPRE = 10;
  2965  00320A  0E00               	movlw	0
  2966  00320C  6FF2               	movwf	242,b	;volatile
  2967  00320E  0E0A               	movlw	10
  2968  003210  6FF1               	movwf	241,b	;volatile
  2969                           
  2970                           ;adc.c: 31:     ADACQ = 10;
  2971  003212  0E00               	movlw	0
  2972  003214  6FEF               	movwf	239,b	;volatile
  2973  003216  0E0A               	movlw	10
  2974  003218  6FEE               	movwf	238,b	;volatile
  2975                           
  2976                           ;adc.c: 34:     ADCON2bits.MD = 0;
  2977  00321A  0EF8               	movlw	-8
  2978  00321C  17F5               	andwf	245,f,b	;volatile
  2979  00321E                     
  2980                           ; BSR set to: 3
  2981                           ;adc.c: 37:     ADCON0bits.ON = 1;
  2982  00321E  8FF3               	bsf	243,7,b	;volatile
  2983  003220                     
  2984                           ; BSR set to: 3
  2985                           ;adc.c: 40:     PIR2bits.ADTIF = 0;
  2986  003220  90B0               	bcf	176,0,c	;volatile
  2987  003222                     
  2988                           ; BSR set to: 3
  2989                           ;adc.c: 41:     IPR2bits.ADTIP = 1;
  2990  003222  8164               	bsf	100,0,b	;volatile
  2991  003224                     
  2992                           ; BSR set to: 3
  2993                           ;adc.c: 42:     PIE2bits.ADTIE = 1;
  2994  003224  80A0               	bsf	160,0,c	;volatile
  2995  003226                     
  2996                           ; BSR set to: 3
  2997  003226  0012               	return		;funcret
  2998  003228                     __end_of_ADC_INIT:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _ADTIF_ISR *****************
  3002 ;; Defined at:
  3003 ;;		line 7 in file "isr.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		None
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		Interrupt level 2
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text16
  3031  003300                     __ptext16:
  3032                           	callstack 0
  3033  003300                     _ADTIF_ISR:
  3034                           	callstack 119
  3035  003300                     
  3036                           ;isr.c: 10:     PIR2bits.ADTIF = 0;
  3037  003300  90B0               	bcf	176,0,c	;volatile
  3038                           
  3039                           ;isr.c: 12:     LATDbits.LATD0 = 1;
  3040  003302  80C1               	bsf	193,0,c	;volatile
  3041  003304  0011               	retfie		f
  3042  003306                     __end_of_ADTIF_ISR:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _DEFAULT_ISR *****************
  3046 ;; Defined at:
  3047 ;;		line 16 in file "isr.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		None
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		Interrupt level 2
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text17
  3075  003308                     __ptext17:
  3076                           	callstack 0
  3077  003308                     _DEFAULT_ISR:
  3078                           	callstack 119
  3079  003308  F000               	nop		;# 
  3080  00330A  0011               	retfie		f
  3081  00330C                     __end_of_DEFAULT_ISR:
  3082                           	callstack 0
  3083                           
  3084                           ;
  3085                           ; Interrupt Vector Table @ 0x8
  3086                           ;
  3087                           
  3088                           	psect	ivt0x8
  3089  000008                     __pivt0x8:
  3090                           	callstack 0
  3091  000008                     ivt0x8_base:
  3092                           	callstack 0
  3093                           
  3094                           ; Vector 0 : SWINT
  3095  000008  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3096                           
  3097                           ; Vector 1 : HLVD
  3098  00000A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3099                           
  3100                           ; Vector 2 : OSF
  3101  00000C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3102                           
  3103                           ; Vector 3 : CSW
  3104  00000E  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3105                           
  3106                           ; Vector 4 : Undefined
  3107  000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3108                           
  3109                           ; Vector 5 : CLC1
  3110  000012  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3111                           
  3112                           ; Vector 6 : Undefined
  3113  000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3114                           
  3115                           ; Vector 7 : IOC
  3116  000016  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3117                           
  3118                           ; Vector 8 : INT0
  3119  000018  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3120                           
  3121                           ; Vector 9 : ZCD
  3122  00001A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3123                           
  3124                           ; Vector 10 : AD
  3125  00001C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3126                           
  3127                           ; Vector 11 : ACT
  3128  00001E  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3129                           
  3130                           ; Vector 12 : CMP1
  3131  000020  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3132                           
  3133                           ; Vector 13 : SMT1
  3134  000022  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3135                           
  3136                           ; Vector 14 : SMT1PRA
  3137  000024  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3138                           
  3139                           ; Vector 15 : SMT1PRW
  3140  000026  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3141                           
  3142                           ; Vector 16 : ADT
  3143  000028  0CC0               	dw	_ADTIF_ISR shr (0+2)
  3144                           
  3145                           ; Vector 17 : Undefined
  3146  00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3147                           
  3148                           ; Vector 18 : Undefined
  3149  00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3150                           
  3151                           ; Vector 19 : Undefined
  3152  00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3153                           
  3154                           ; Vector 20 : DMA1SCNT
  3155  000030  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3156                           
  3157                           ; Vector 21 : DMA1DCNT
  3158  000032  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3159                           
  3160                           ; Vector 22 : DMA1OR
  3161  000034  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3162                           
  3163                           ; Vector 23 : DMA1A
  3164  000036  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3165                           
  3166                           ; Vector 24 : SPI1RX
  3167  000038  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3168                           
  3169                           ; Vector 25 : SPI1TX
  3170  00003A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3171                           
  3172                           ; Vector 26 : SPI1
  3173  00003C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3174                           
  3175                           ; Vector 27 : TMR2
  3176  00003E  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3177                           
  3178                           ; Vector 28 : TMR1
  3179  000040  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3180                           
  3181                           ; Vector 29 : TMR1G
  3182  000042  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3183                           
  3184                           ; Vector 30 : CCP1
  3185  000044  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3186                           
  3187                           ; Vector 31 : TMR0
  3188  000046  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3189                           
  3190                           ; Vector 32 : U1RX
  3191  000048  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3192                           
  3193                           ; Vector 33 : U1TX
  3194  00004A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3195                           
  3196                           ; Vector 34 : U1E
  3197  00004C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3198                           
  3199                           ; Vector 35 : U1
  3200  00004E  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3201                           
  3202                           ; Vector 36 : Undefined
  3203  000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3204                           
  3205                           ; Vector 37 : Undefined
  3206  000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3207                           
  3208                           ; Vector 38 : PWM1PR
  3209  000054  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3210                           
  3211                           ; Vector 39 : PWM1
  3212  000056  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3213                           
  3214                           ; Vector 40 : SPI2RX
  3215  000058  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3216                           
  3217                           ; Vector 41 : SPI2TX
  3218  00005A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3219                           
  3220                           ; Vector 42 : SPI2
  3221  00005C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3222                           
  3223                           ; Vector 43 : Undefined
  3224  00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3225                           
  3226                           ; Vector 44 : TMR3
  3227  000060  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3228                           
  3229                           ; Vector 45 : TMR3G
  3230  000062  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3231                           
  3232                           ; Vector 46 : PWM2PR
  3233  000064  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3234                           
  3235                           ; Vector 47 : PWM2
  3236  000066  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3237                           
  3238                           ; Vector 48 : INT1
  3239  000068  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3240                           
  3241                           ; Vector 49 : CLC2
  3242  00006A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3243                           
  3244                           ; Vector 50 : CWG1
  3245  00006C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3246                           
  3247                           ; Vector 51 : NCO1
  3248  00006E  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3249                           
  3250                           ; Vector 52 : DMA2SCNT
  3251  000070  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3252                           
  3253                           ; Vector 53 : DMA2DCNT
  3254  000072  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3255                           
  3256                           ; Vector 54 : DMA2OR
  3257  000074  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3258                           
  3259                           ; Vector 55 : DMA2A
  3260  000076  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3261                           
  3262                           ; Vector 56 : I2C1RX
  3263  000078  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3264                           
  3265                           ; Vector 57 : I2C1TX
  3266  00007A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3267                           
  3268                           ; Vector 58 : I2C1
  3269  00007C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3270                           
  3271                           ; Vector 59 : I2C1E
  3272  00007E  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3273                           
  3274                           ; Vector 60 : Undefined
  3275  000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3276                           
  3277                           ; Vector 61 : CLC3
  3278  000082  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3279                           
  3280                           ; Vector 62 : PWM3PR
  3281  000084  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3282                           
  3283                           ; Vector 63 : PWM3
  3284  000086  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3285                           
  3286                           ; Vector 64 : U2RX
  3287  000088  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3288                           
  3289                           ; Vector 65 : U2TX
  3290  00008A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3291                           
  3292                           ; Vector 66 : U2E
  3293  00008C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3294                           
  3295                           ; Vector 67 : U2
  3296  00008E  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3297                           
  3298                           ; Vector 68 : TMR5
  3299  000090  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3300                           
  3301                           ; Vector 69 : TMR5G
  3302  000092  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3303                           
  3304                           ; Vector 70 : CCP2
  3305  000094  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3306                           
  3307                           ; Vector 71 : SCAN
  3308  000096  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3309                           
  3310                           ; Vector 72 : U3RX
  3311  000098  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3312                           
  3313                           ; Vector 73 : U3TX
  3314  00009A  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3315                           
  3316                           ; Vector 74 : U3E
  3317  00009C  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3318                           
  3319                           ; Vector 75 : U3
  3320  00009E  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3321                           
  3322                           ; Vector 76 : Undefined
  3323  0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3324                           
  3325                           ; Vector 77 : CLC4
  3326  0000A2  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3327                           
  3328                           ; Vector 78 : Undefined
  3329  0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3330                           
  3331                           ; Vector 79 : Undefined
  3332  0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3333                           
  3334                           ; Vector 80 : INT2
  3335  0000A8  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3336                           
  3337                           ; Vector 81 : CLC5
  3338  0000AA  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3339                           
  3340                           ; Vector 82 : CWG2
  3341  0000AC  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3342                           
  3343                           ; Vector 83 : NCO2
  3344  0000AE  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3345                           
  3346                           ; Vector 84 : DMA3SCNT
  3347  0000B0  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3348                           
  3349                           ; Vector 85 : DMA3DCNT
  3350  0000B2  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3351                           
  3352                           ; Vector 86 : DMA3OR
  3353  0000B4  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3354                           
  3355                           ; Vector 87 : DMA3A
  3356  0000B6  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3357                           
  3358                           ; Vector 88 : CCP3
  3359  0000B8  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3360                           
  3361                           ; Vector 89 : CLC6
  3362  0000BA  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3363                           
  3364                           ; Vector 90 : CWG3
  3365  0000BC  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3366                           
  3367                           ; Vector 91 : TMR4
  3368  0000BE  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3369                           
  3370                           ; Vector 92 : DMA4SCNT
  3371  0000C0  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3372                           
  3373                           ; Vector 93 : DMA4DCNT
  3374  0000C2  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3375                           
  3376                           ; Vector 94 : DMA4OR
  3377  0000C4  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3378                           
  3379                           ; Vector 95 : DMA4A
  3380  0000C6  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3381                           
  3382                           ; Vector 96 : U4RX
  3383  0000C8  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3384                           
  3385                           ; Vector 97 : U4TX
  3386  0000CA  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3387                           
  3388                           ; Vector 98 : U4E
  3389  0000CC  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3390                           
  3391                           ; Vector 99 : U4
  3392  0000CE  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3393                           
  3394                           ; Vector 100 : DMA5SCNT
  3395  0000D0  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3396                           
  3397                           ; Vector 101 : DMA5DCNT
  3398  0000D2  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3399                           
  3400                           ; Vector 102 : DMA5OR
  3401  0000D4  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3402                           
  3403                           ; Vector 103 : DMA5A
  3404  0000D6  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3405                           
  3406                           ; Vector 104 : U5RX
  3407  0000D8  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3408                           
  3409                           ; Vector 105 : U5TX
  3410  0000DA  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3411                           
  3412                           ; Vector 106 : U5E
  3413  0000DC  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3414                           
  3415                           ; Vector 107 : U5
  3416  0000DE  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3417                           
  3418                           ; Vector 108 : DMA6SCNT
  3419  0000E0  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3420                           
  3421                           ; Vector 109 : DMA6DCNT
  3422  0000E2  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3423                           
  3424                           ; Vector 110 : DMA6OR
  3425  0000E4  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3426                           
  3427                           ; Vector 111 : DMA6A
  3428  0000E6  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3429                           
  3430                           ; Vector 112 : Undefined
  3431  0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3432                           
  3433                           ; Vector 113 : CLC7
  3434  0000EA  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3435                           
  3436                           ; Vector 114 : CMP2
  3437  0000EC  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3438                           
  3439                           ; Vector 115 : NCO3
  3440  0000EE  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3441                           
  3442                           ; Vector 116 : Undefined
  3443  0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3444                           
  3445                           ; Vector 117 : Undefined
  3446  0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3447                           
  3448                           ; Vector 118 : Undefined
  3449  0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3450                           
  3451                           ; Vector 119 : Undefined
  3452  0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3453                           
  3454                           ; Vector 120 : NVM
  3455  0000F8  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3456                           
  3457                           ; Vector 121 : CLC8
  3458  0000FA  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3459                           
  3460                           ; Vector 122 : CRC
  3461  0000FC  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3462                           
  3463                           ; Vector 123 : TMR6
  3464  0000FE  0CC2               	dw	_DEFAULT_ISR shr (0+2)
  3465  000100                     ivt0x8_undefint:
  3466                           	callstack 0
  3467  000100  00FF               	reset	
  3468                           
  3469                           	psect	rparam
  3470  0000                     
  3471                           	psect	idloc
  3472                           
  3473                           ;Config register IDLOC0 @ 0x200000
  3474                           ;	unspecified, using default values
  3475  200000                     	org	2097152
  3476  200000  0FFF               	dw	4095
  3477                           
  3478                           ;Config register IDLOC1 @ 0x200002
  3479                           ;	unspecified, using default values
  3480  200002                     	org	2097154
  3481  200002  0FFF               	dw	4095
  3482                           
  3483                           ;Config register IDLOC2 @ 0x200004
  3484                           ;	unspecified, using default values
  3485  200004                     	org	2097156
  3486  200004  0FFF               	dw	4095
  3487                           
  3488                           ;Config register IDLOC3 @ 0x200006
  3489                           ;	unspecified, using default values
  3490  200006                     	org	2097158
  3491  200006  0FFF               	dw	4095
  3492                           
  3493                           ;Config register IDLOC4 @ 0x200008
  3494                           ;	unspecified, using default values
  3495  200008                     	org	2097160
  3496  200008  0FFF               	dw	4095
  3497                           
  3498                           ;Config register IDLOC5 @ 0x20000A
  3499                           ;	unspecified, using default values
  3500  20000A                     	org	2097162
  3501  20000A  0FFF               	dw	4095
  3502                           
  3503                           ;Config register IDLOC6 @ 0x20000C
  3504                           ;	unspecified, using default values
  3505  20000C                     	org	2097164
  3506  20000C  0FFF               	dw	4095
  3507                           
  3508                           ;Config register IDLOC7 @ 0x20000E
  3509                           ;	unspecified, using default values
  3510  20000E                     	org	2097166
  3511  20000E  0FFF               	dw	4095
  3512                           
  3513                           ;Config register IDLOC8 @ 0x200010
  3514                           ;	unspecified, using default values
  3515  200010                     	org	2097168
  3516  200010  0FFF               	dw	4095
  3517                           
  3518                           ;Config register IDLOC9 @ 0x200012
  3519                           ;	unspecified, using default values
  3520  200012                     	org	2097170
  3521  200012  0FFF               	dw	4095
  3522                           
  3523                           ;Config register IDLOC10 @ 0x200014
  3524                           ;	unspecified, using default values
  3525  200014                     	org	2097172
  3526  200014  0FFF               	dw	4095
  3527                           
  3528                           ;Config register IDLOC11 @ 0x200016
  3529                           ;	unspecified, using default values
  3530  200016                     	org	2097174
  3531  200016  0FFF               	dw	4095
  3532                           
  3533                           ;Config register IDLOC12 @ 0x200018
  3534                           ;	unspecified, using default values
  3535  200018                     	org	2097176
  3536  200018  0FFF               	dw	4095
  3537                           
  3538                           ;Config register IDLOC13 @ 0x20001A
  3539                           ;	unspecified, using default values
  3540  20001A                     	org	2097178
  3541  20001A  0FFF               	dw	4095
  3542                           
  3543                           ;Config register IDLOC14 @ 0x20001C
  3544                           ;	unspecified, using default values
  3545  20001C                     	org	2097180
  3546  20001C  0FFF               	dw	4095
  3547                           
  3548                           ;Config register IDLOC15 @ 0x20001E
  3549                           ;	unspecified, using default values
  3550  20001E                     	org	2097182
  3551  20001E  0FFF               	dw	4095
  3552                           
  3553                           	psect	config
  3554                           
  3555                           ;Config register CONFIG1 @ 0x300000
  3556                           ;	External Oscillator Selection
  3557                           ;	FEXTOSC = OFF, Oscillator not enabled
  3558                           ;	Reset Oscillator Selection
  3559                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3560  300000                     	org	3145728
  3561  300000  8C                 	db	140
  3562                           
  3563                           ;Config register CONFIG2 @ 0x300001
  3564                           ;	Clock out Enable bit
  3565                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3566                           ;	PRLOCKED One-Way Set Enable bit
  3567                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3568                           ;	Clock Switch Enable bit
  3569                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  3570                           ;	Fail-Safe Clock Monitor Enable bit
  3571                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3572  300001                     	org	3145729
  3573  300001  D7                 	db	215
  3574                           
  3575                           ;Config register CONFIG3 @ 0x300002
  3576                           ;	MCLR Enable bit
  3577                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3578                           ;	Power-up timer selection bits
  3579                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3580                           ;	Multi-vector enable bit
  3581                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3582                           ;	IVTLOCK bit One-way set enable bit
  3583                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3584                           ;	Low Power BOR Enable bit
  3585                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3586                           ;	Brown-out Reset Enable bits
  3587                           ;	BOREN = OFF, Brown-out Reset disabled
  3588  300002                     	org	3145730
  3589  300002  3F                 	db	63
  3590                           
  3591                           ;Config register CONFIG4 @ 0x300003
  3592                           ;	Brown-out Reset Voltage Selection bits
  3593                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3594                           ;	ZCD Disable bit
  3595                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3596                           ;	PPSLOCK bit One-Way Set Enable bit
  3597                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3598                           ;	Stack Full/Underflow Reset Enable bit
  3599                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3600                           ;	Low Voltage Programming Enable bit
  3601                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3602                           ;	Extended Instruction Set Enable bit
  3603                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3604  300003                     	org	3145731
  3605  300003  DF                 	db	223
  3606                           
  3607                           ;Config register CONFIG5 @ 0x300004
  3608                           ;	WDT Period selection bits
  3609                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3610                           ;	WDT operating mode
  3611                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3612  300004                     	org	3145732
  3613  300004  9F                 	db	159
  3614                           
  3615                           ;Config register CONFIG6 @ 0x300005
  3616                           ;	WDT Window Select bits
  3617                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3618                           ;	WDT input clock selector
  3619                           ;	WDTCCS = SC, Software Control
  3620  300005                     	org	3145733
  3621  300005  FF                 	db	255
  3622                           
  3623                           ;Config register CONFIG7 @ 0x300006
  3624                           ;	Boot Block Size selection bits
  3625                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3626                           ;	Boot Block enable bit
  3627                           ;	BBEN = OFF, Boot block disabled
  3628                           ;	Storage Area Flash enable bit
  3629                           ;	SAFEN = OFF, SAF disabled
  3630                           ;	Background Debugger
  3631                           ;	DEBUG = OFF, Background Debugger disabled
  3632  300006                     	org	3145734
  3633  300006  FF                 	db	255
  3634                           
  3635                           ;Config register CONFIG8 @ 0x300007
  3636                           ;	Boot Block Write Protection bit
  3637                           ;	WRTB = OFF, Boot Block not Write protected
  3638                           ;	Configuration Register Write Protection bit
  3639                           ;	WRTC = OFF, Configuration registers not Write protected
  3640                           ;	Data EEPROM Write Protection bit
  3641                           ;	WRTD = OFF, Data EEPROM not Write protected
  3642                           ;	SAF Write protection bit
  3643                           ;	WRTSAF = OFF, SAF not Write Protected
  3644                           ;	Application Block write protection bit
  3645                           ;	WRTAPP = OFF, Application Block not write protected
  3646  300007                     	org	3145735
  3647  300007  FF                 	db	255
  3648                           
  3649                           ; Padding undefined space
  3650  300008                     	org	3145736
  3651  300008  FF                 	db	255
  3652                           
  3653                           ;Config register CONFIG10 @ 0x300009
  3654                           ;	PFM and Data EEPROM Code Protection bit
  3655                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3656  300009                     	org	3145737
  3657  300009  FF                 	db	255
  3658                           tosu	equ	0x4FF
  3659                           tosh	equ	0x4FE
  3660                           tosl	equ	0x4FD
  3661                           stkptr	equ	0x4FC
  3662                           pclatu	equ	0x4FB
  3663                           pclath	equ	0x4FA
  3664                           pcl	equ	0x4F9
  3665                           tblptru	equ	0x4F8
  3666                           tblptrh	equ	0x4F7
  3667                           tblptrl	equ	0x4F6
  3668                           tablat	equ	0x4F5
  3669                           prodh	equ	0x4F4
  3670                           prodl	equ	0x4F3
  3671                           indf0	equ	0x4EF
  3672                           postinc0	equ	0x4EE
  3673                           postdec0	equ	0x4ED
  3674                           preinc0	equ	0x4EC
  3675                           plusw0	equ	0x4EB
  3676                           fsr0h	equ	0x4EA
  3677                           fsr0l	equ	0x4E9
  3678                           wreg	equ	0x4E8
  3679                           indf1	equ	0x4E7
  3680                           postinc1	equ	0x4E6
  3681                           postdec1	equ	0x4E5
  3682                           preinc1	equ	0x4E4
  3683                           plusw1	equ	0x4E3
  3684                           fsr1h	equ	0x4E2
  3685                           fsr1l	equ	0x4E1
  3686                           bsr	equ	0x4E0
  3687                           indf2	equ	0x4DF
  3688                           postinc2	equ	0x4DE
  3689                           postdec2	equ	0x4DD
  3690                           preinc2	equ	0x4DC
  3691                           plusw2	equ	0x4DB
  3692                           fsr2h	equ	0x4DA
  3693                           fsr2l	equ	0x4D9
  3694                           status	equ	0x4D8

Data Sizes:
    Strings     128
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK5           160      8      48
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_1(CODE[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), STR_1(CODE[30]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1338_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), 
		 -> STR_7(CODE[16]), STR_6(CODE[12]), STR_5(CODE[13]), STR_4(CODE[14]), 
		 -> STR_3(CODE[14]), STR_2(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), 
		 -> STR_7(CODE[16]), STR_6(CODE[12]), STR_5(CODE[13]), STR_4(CODE[14]), 
		 -> STR_3(CODE[14]), STR_2(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), 
		 -> STR_7(CODE[16]), STR_6(CODE[12]), STR_5(CODE[13]), STR_4(CODE[14]), 
		 -> STR_3(CODE[14]), STR_2(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _ADTIF_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_printf

Critical Paths under _ADTIF_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADTIF_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADTIF_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ADTIF_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ADTIF_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ADTIF_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ADTIF_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ADTIF_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ADTIF_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ADTIF_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ADTIF_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ADTIF_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ADTIF_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ADTIF_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ADTIF_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ADTIF_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ADTIF_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ADTIF_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ADTIF_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ADTIF_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ADTIF_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ADTIF_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ADTIF_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ADTIF_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ADTIF_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ADTIF_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ADTIF_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _ADTIF_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _ADTIF_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _ADTIF_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _ADTIF_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _ADTIF_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10096
                                              4 BANK5      4     4      0
                           _ADC_INIT
                    _DEBUG_UART_INIT
                             _printf
                               _puts
 ---------------------------------------------------------------------------------
 (1) _puts                                                 5     3      2    2614
                                             19 COMRAM     5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7459
                                             90 COMRAM     4     0      4
                                              0 BANK5      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6645
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    6291
                                             66 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4774
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3125
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _fputs                                                9     5      4    1527
                                             10 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (3) _fputc                                                9     5      4     958
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _DEBUG_UART_INIT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ADTIF_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _DEFAULT_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_INIT
   _DEBUG_UART_INIT
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _puts
     _fputc
       _putch
     _fputs
       _fputc
         _putch

 _ADTIF_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK24          100      0       0      43        0.0%
BANK24             100      0       0      44        0.0%
BITBANK23          100      0       0      41        0.0%
BANK23             100      0       0      42        0.0%
BITBANK22          100      0       0      39        0.0%
BANK22             100      0       0      40        0.0%
BITBANK21          100      0       0      37        0.0%
BANK21             100      0       0      38        0.0%
BITBANK20          100      0       0      35        0.0%
BANK20             100      0       0      36        0.0%
BITBANK19          100      0       0      33        0.0%
BANK19             100      0       0      34        0.0%
BITBANK18          100      0       0      31        0.0%
BANK18             100      0       0      32        0.0%
BITBANK17          100      0       0      29        0.0%
BANK17             100      0       0      30        0.0%
BITBANK16          100      0       0      27        0.0%
BANK16             100      0       0      28        0.0%
BITBANK15          100      0       0      25        0.0%
BANK15             100      0       0      26        0.0%
BITBANK14          100      0       0      23        0.0%
BANK14             100      0       0      24        0.0%
BITBANK13          100      0       0      21        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      19        0.0%
BANK12             100      0       0      20        0.0%
BITBANK11          100      0       0      17        0.0%
BANK11             100      0       0      18        0.0%
BITBANK10          100      0       0      15        0.0%
BANK10             100      0       0      16        0.0%
BITBANK9           100      0       0      13        0.0%
BANK9              100      0       0      14        0.0%
BITBANK8           100      0       0      11        0.0%
BANK8              100      0       0      12        0.0%
BITBANK7           100      0       0       9        0.0%
BANK7              100      0       0      10        0.0%
BITBANK6           100      0       0       7        0.0%
BANK6              100      0       0       8        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      8      30       5       30.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E       6        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Nov 24 14:46:29 2020

       ??_DEBUG_UART_INIT 0501        __size_of_ADTIF_ISR 0006                        l50 2B5E  
                      l44 2AB0                        l53 2BA8                        l47 2B4E  
                      l49 2B5C                        l79 3226                       l122 3296  
                     l125 32E6                       l128 32FC                       l245 2DC0  
                     l258 2F24                       l900 3086                       l841 2FEA  
                     l809 32BE                       l907 30EE                       l923 3260  
                     l908 30F6                       l836 2F6C                       l916 31AA  
                     l917 31AA                       l839 2FAE                       l847 2622  
                     l880 3154                       l849 262A                       l881 315C  
                     l874 2A50                       l867 2864                       l885 31E2  
                     l888 31EA                       u600 30DC                       u610 30EE  
                     u611 30EA                       u700 2DD4                       u620 3254  
                     u701 2DD0                       u621 3250                       u630 2C4C  
                     u710 2E06                       u550 32F6                       u631 2C48  
                     u711 2E02                       u551 32F2                       u607 30D2  
                     u640 2C7E                       u720 2E44                       u800 31C6  
                     u560 2FFE                       u641 2C7A                       u721 2E40  
                     u801 31C2                       u561 2FFA                       u730 2E6E  
                     u570 3010                       u810 25B2                       u651 2CA8  
                     u731 2E6A                       u571 300C                       u811 25AC  
                     u660 2CCC                       u740 2E9C                       u580 3038  
                     u900 27B2                       u820 25B4                       u661 2CC8  
                     u741 2E98                       u581 3034                       u901 27AE  
                     u670 2CF6                       u750 2EE4                       u590 306E  
                     u910 27CC                       u830 25CA                       u671 2CF2  
                     u751 2EE0                       u591 306A                       u911 27C8  
                     u831 25C6                       u680 2D36                       u760 2F36  
                     u920 27DC                       u840 25FA                       u681 2D32  
                     u761 2F32                       u921 27D8                       u841 25F6  
                     u690 2D80                       u770 2F58                       u930 27EE  
                     u850 2616                       u691 2D7C                       u771 2F54  
                     u931 27EA                       u851 2612                       u780 2FAE  
                     u940 27FE                       u860 2644                       u781 2FAA  
                     u941 27FA                       u861 2640                       u790 2FBE  
                     u950 2816                       u870 2652                       u791 2FBA  
                     u951 2812                       u871 264E                       u880 277A  
                     u960 288E                       u881 2776                       u961 288A  
                     u890 2798                       u970 28DE                       u891 2794  
                     u971 28DA                       u980 2906                       u981 2902  
                     u990 29C2                       u991 29BE                       _abs 31AC  
                     _pad 2F26                       wreg 0004E8      __size_of_DEFAULT_ISR 0004  
                    ?_abs 0513                      l1301 30AA                      l1303 3228  
                    l1321 2C70                      l1313 2C3A                      l1305 3234  
                    l1401 2F64                      l1331 2CCC                      l1323 2C7E  
                    l1315 2C3E                      l1307 3238                      l1411 2FD2  
                    l1403 2F78                      l1341 2D36                      l1333 2CD4  
                    l1325 2C9E                      l1317 2C4C                      l1309 3254  
                    l1405 2F8C                      l1421 25A2                      l1501 29C2  
                    l1351 2D80                      l1343 2D56                      l1335 2CE8  
                    l1327 2CA2                      l1319 2C6C                      l1415 31AC  
                    l1407 2F90                      l1431 2616                      l1423 25CA  
                    l1511 2A06                      l1503 29D4                      l1353 2DA0  
                    l1345 2D58                      l1337 2CF6                      l1329 2CAE  
                    l1361 2DD4                      l1417 31C6                      l1281 2FFE  
                    l1409 2FBE                      l1441 2660                      l1433 2632  
                    l1425 25EA                      l1505 29E8                      l1601 2ABE  
                    l1531 3262                      l1347 2D6A                      l1339 2D08  
                    l1371 2E44                      l1363 2DF4                      l1275 32E6  
                    l1291 3080                      l1283 3010                      l1451 26FC  
                    l1443 2668                      l1435 2644                      l1427 25FA  
                    l1419 2582                      l1515 2A12                      l1523 30F8  
                    l1611 2B4C                      l1603 2B3C                      l1541 3288  
                    l1533 3268                      l1349 2D70                      l1381 2EBC  
                    l1373 2E4C                      l1365 2DF8                      l1357 2DC2  
                    l1277 32F6                      l1285 301A                      l1461 27CC  
                    l1445 266E                      l1453 2760                      l1437 2652  
                    l1429 25FC                      l1517 2A3A                      l1509 29F4  
                    l1525 3100                      l1613 2B6C                      l1605 2B40  
                    l1543 328A                      l1535 326E                      l1383 2ECE  
                    l1375 2E60                      l1367 2E06                      l1359 2DC6  
                    l1287 3038                      l1279 2FEC                      l1295 3088  
                    l1471 2816                      l1455 277A                      l1463 27DC  
                    l1447 26F0                      l1439 2658                      l1527 310E  
                    l1551 3184                      l1615 2B74                      l1607 2B44  
                    l1561 321E                      l1545 3294                      l1537 3272  
                    l1377 2E6E                      l1385 2ED4                      l1369 2E26  
                    l1289 306E                      l1297 3094                      l1393 2F26  
                    l1473 2822                      l1465 27EE                      l1457 2798  
                    l1449 26F6                      l1481 2866                      l1529 3134  
                    l1553 31A6                      l1617 2BA6                      l1609 2B48  
                    l1563 3220                      l1539 3286                      l1387 2EE4  
                    l1379 2E9C                      l1299 30A6                      l1395 2F36  
                    l1475 282A                      l1467 27FE                      l1459 27B2  
                    l1491 28DE                      l1483 288E                      l1571 32A2  
                    l1547 315E                      l1619 2BB4                      l1565 3222  
                    l1557 31EC                      l1389 2F04                      l1397 2F4A  
                    l1469 2804                      l1477 283C                      l1493 2906  
                    l1485 28A0                      l1549 3162                      l1581 2A6A  
                    l1567 3224                      l1559 31FA                      l1399 2F58  
                    l1495 2962                      l1487 28B2                      l1591 2A94  
                    l1583 2A6E                      l1575 2A52                      l1489 28B6  
                    l1569 3298                      l1593 2A9C                      l1585 2A70  
                    l1577 2A5A                      l1499 299A                      l1595 2AA2  
                    l1587 2A88                      l1579 2A5E                      l1597 2AAA  
                    l1589 2A8C                      l1599 2AAE                      ?_pad 0514  
                    STR_1 2501                      STR_2 251F                      STR_3 253F  
                    STR_4 254D                      STR_5 255B                      STR_6 2575  
                    STR_7 252F                      STR_8 2568                      STR_9 254D  
                    u1000 3154                      u1001 3150                      u1010 3184  
                    u1011 3180                      u1020 31A6                      u1021 31A2  
                    u1030 2ABE                      u1031 2ABA                      u1040 2B2E  
                    u1041 2B24                      u1050 2B5C                      u1107 2B6E  
                    u1051 2B58                      u1060 2B6C                      u1061 2B68  
                    u1070 2BA6                      u1071 2BA2                      u1080 2C24  
                    u1048 2B32                      u1081 2C1A                      u1088 2C28  
                    u1097 2A7C                      i2l93 330A                      i2l88 3304  
                    abs@a 0513                      _dbuf 0568          __end_of_ADC_INIT 3228  
                    _main 2A52                      _dtoa 2582                      _prec 0564  
                    _nout 0560                      pad@i 051B                      pad@p 0518  
                    fsr1h 0004E2                      fsr2h 0004DA                      indf1 0004E7  
                    indf2 0004DF                      fsr1l 0004E1                      pad@w 051D  
                    fsr2l 0004D9                      _puts 315E                      start 0102  
            ___param_bank 000000                     ??_abs 0515                     ??_pad 051A  
         __end_of___aodiv 2DC2                     _ADACQ 0003EE                     ?_main 0501  
                   ?_dtoa 051F           __end_of___aomod 2F26                     _ADERR 0003DD  
                   _ADPCH 0003EC                     _ADRES 0003EA                     _ADPRE 0003F1  
                   STR_10 255B                     STR_11 2575                     _ADUTH 0003DB  
                   ?_puts 0514                     _U1TXB 0002A3              vfpfcnvrt@fmt 0545  
                   _flags 0566                     _fputc 2FEC                     _fputs 3088  
                   pad@fp 0514                     _width 0562                     _putch 32E4  
                   dtoa@d 0521                     dtoa@i 0541                     dtoa@n 0539  
                   dtoa@p 0533                     dtoa@s 0537                     dtoa@w 0535  
       __end_of_ADTIF_ISR 3306                     tablat 0004F5                     puts@s 0514  
                   status 0004D8           __initialization 32C0              __end_of_main 2C3A  
            __end_of_dtoa 2866              __end_of_puts 31AC                    ??_main 058C  
                  ??_dtoa 0529                    ??_puts 0516             __activetblptr 000002  
                  ?_fputc 0502                    ?_fputs 050B                    _ADPREV 0003E8  
                  _ADSTPT 0003DF                    ?_putch 0501                    _U1CON0 0002AB  
                  _U1CON1 0002AC                    _U1CON2 0002AD                    _U1BRGH 0002AF  
                  _U1BRGL 0002AE                    _RF0PPS 000229                    i2l1271 3300  
                  i2l1273 3308              vfprintf@cfmt 0559                 ??___aodiv 0511  
               ??___aomod 0511                    clear_0 32C6                    _printf 3298  
                  pad@buf 0516                    dtoa@fp 051F                    _strlen 3228  
                  fputc@c 0502                 ?_ADC_INIT 0501                    fputs@c 0511  
                  fputs@i 0512                    fputs@s 050B              __mediumconst 0000  
                  tblptrh 0004F7                    tblptrl 0004F6                    tblptru 0004F8  
        __end_of_vfprintf 315E           _DEBUG_UART_INIT 3262                __accesstop 0560  
 __end_of__initialization 32DA             ___rparam_used 000001            __pcstackCOMRAM 0501  
          ivt0x8_undefint 0100             __end_of_fputc 3088             __end_of_fputs 30F8  
           __end_of_putch 32FE                ??_ADC_INIT 0501                   ??_fputc 0506  
                 ??_fputs 050F                   ??_putch 0501                __pbssBANK5 0560  
                 IVTBASEH 00045E                   IVTBASEL 00045D                   IVTBASEU 00045F  
                 ?_printf 055B                   ?_strlen 0501             ??_DEFAULT_ISR 0501  
                 _U1RXPPS 000272   __end_of_DEBUG_UART_INIT 3298        __size_of_vfpfcnvrt 01EC  
               _ADREFbits 0003F8                 _ADTIF_ISR 3300                   __Hparam 0000  
                 __Lparam 0000                   ___aodiv 2C3A                   ___aomod 2DC2  
               ?_vfprintf 0553              __psmallconst 2500                   __pcinit 32C0  
                 __ramtop 2500                   __ptext0 2A52                   __ptext1 315E  
                 __ptext2 3298                   __ptext3 30F8                   __ptext4 2866  
                 __ptext5 2582                   __ptext6 2F26                   __ptext7 3228  
                 __ptext8 3088                   __ptext9 2FEC           __size_of_printf 0028  
         __size_of_strlen 003A              __size_of_abs 0040              __size_of_pad 00C6  
     __end_of_DEFAULT_ISR 330C      end_of_initialization 32DA                   fputc@fp 0504  
           __Lmediumconst 0000                   fputs@fp 050D                ?_ADTIF_ISR 0501  
       __end_of_vfpfcnvrt 2A52                   postdec2 0004DD                   postinc0 0004EE  
                 postinc1 0004E6                   postinc2 0004DE                ??_vfprintf 0559  
                 strlen@a 0503                   strlen@s 0501                 _PORTDbits 0004D1  
               _TRISAbits 0004C6          ?_DEBUG_UART_INIT 0501                 _TRISDbits 0004C9  
               _TRISFbits 0004CB         __size_of_ADC_INIT 003C               vfpfcnvrt@ap 0547  
             vfpfcnvrt@fp 0543               vfpfcnvrt@ll 054B            __end_of_printf 32C0  
             _DEFAULT_ISR 3308            __end_of_strlen 3262       start_initialization 32C0  
             __end_of_abs 31EC               __end_of_pad 2FEC                ivt0x8_base 0008  
             ??_ADTIF_ISR 0501               vfprintf@fmt 0555                  ??_printf 055F  
                ??_strlen 0503             __pcstackBANK5 0588          ___aodiv@dividend 0501  
               _dtoa$1402 0531                  ?___aodiv 0501                  ?___aomod 0501  
        ___aodiv@quotient 0513         __size_of_vfprintf 0066               __smallconst 2500  
                _ADC_INIT 31EC            __size_of_fputc 009C            __size_of_fputs 0070  
          __size_of_putch 001A                  _LATDbits 0004C1                  _IPR2bits 000364  
                _PIE2bits 0004A0                  _PIR2bits 0004B0                 _puts$1457 0518  
               _vfpfcnvrt 2866                 main@DVpre 058E                _ADCON0bits 0003F3  
              _ADCON1bits 0003F4                _ADCON2bits 0003F5                _ADCON3bits 0003F6  
             _INTCON0bits 0004D6                  __Hrparam 0000                vfprintf@ap 0557  
                __Lrparam 0000                vfprintf@fp 0553          __size_of___aodiv 0188  
        __size_of___aomod 0164                ?_vfpfcnvrt 0543           ___aodiv@divisor 0509  
         ___aodiv@counter 0511                _ANSELAbits 000400                _ANSELDbits 000418  
              _ANSELFbits 000428              ?_DEFAULT_ISR 0501                  __pivt0x8 0008  
                __ptext10 32E4                  __ptext11 31AC                  __ptext12 2DC2  
                __ptext13 2C3A                  __ptext14 3262                  __ptext15 31EC  
                __ptext16 3300                  __ptext17 3308                _U1CON0bits 0002AB  
              _U1CON1bits 0002AC                _U1FIFObits 0002B0  __size_of_DEBUG_UART_INIT 0036  
           __size_of_main 01E8             __size_of_dtoa 02E4             __size_of_puts 004E  
                _vfprintf 30F8                 printf@fmt 055B          ___aomod@dividend 0501  
               putch@data 0501                  intlevel2 0000                  printf@ap 058A  
         ___aomod@divisor 0509               ??_vfpfcnvrt 0549           ___aomod@counter 0511  
            ___aodiv@sign 0512              ___aomod@sign 0512  
